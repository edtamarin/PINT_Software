
BoardDemo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005c  00800100  00001118  000011ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001118  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001fb  0080015c  0080015c  00001208  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001208  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001238  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00001278  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012d4  00000000  00000000  00001310  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000086e  00000000  00000000  000025e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000808  00000000  00000000  00002e52  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000248  00000000  00000000  0000365c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000056f  00000000  00000000  000038a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b81  00000000  00000000  00003e13  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00004994  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 20 02 	jmp	0x440	; 0x440 <__ctors_end>
       4:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
       8:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
       c:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      10:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      14:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__vector_5>
      18:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      1c:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      20:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      24:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      28:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      2c:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      30:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      34:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      38:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      3c:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      40:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      44:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      48:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      4c:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      50:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      54:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      58:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      5c:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      60:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>
      64:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__bad_interrupt>

00000068 <__trampolines_end>:
	...
      80:	00 0c       	add	r0, r0
      82:	04 04       	cpc	r0, r4
      84:	06 06       	cpc	r0, r22
      86:	06 06       	cpc	r0, r22
      88:	04 04       	cpc	r0, r4
      8a:	0c 08       	sbc	r0, r12
      8c:	18 30       	cpi	r17, 0x08	; 8
      8e:	60 c0       	rjmp	.+192    	; 0x150 <__trampolines_end+0xe8>
	...
      dc:	80 e0       	ldi	r24, 0x00	; 0
      de:	f0 f8       	bld	r15, 0
      e0:	fc fc       	.word	0xfcfc	; ????
      e2:	fe ff       	.word	0xfffe	; ????
      e4:	ff ff       	.word	0xffff	; ????
      e6:	f3 03       	fmuls	r23, r19
      e8:	03 02       	muls	r16, r19
      ea:	02 06       	cpc	r0, r18
      ec:	04 00       	.word	0x0004	; ????
	...
     116:	00 7c       	andi	r16, 0xC0	; 192
     118:	fe c3       	rjmp	.+2044   	; 0x916 <__stack+0x17>
     11a:	81 81       	ldd	r24, Z+1	; 0x01
     11c:	01 03       	mulsu	r16, r17
     11e:	0f 0e       	add	r0, r31
     120:	00 00       	nop
     122:	00 00       	nop
     124:	c0 fc       	sbrc	r12, 0
     126:	0f 07       	cpc	r16, r31
     128:	3f f8       	.word	0xf83f	; ????
     12a:	80 00       	.word	0x0080	; ????
     12c:	00 00       	nop
     12e:	f0 fc       	sbrc	r15, 0
     130:	f8 e0       	ldi	r31, 0x08	; 8
     132:	80 0c       	add	r8, r0
     134:	3f 3f       	cpi	r19, 0xFF	; 255
     136:	0c c0       	rjmp	.+24     	; 0x150 <__trampolines_end+0xe8>
     138:	f0 f8       	bld	r15, 0
     13a:	fc 00       	.word	0x00fc	; ????
     13c:	00 01       	movw	r0, r0
     13e:	ff ff       	.word	0xffff	; ????
     140:	07 01       	movw	r0, r14
     142:	00 c0       	rjmp	.+0      	; 0x144 <__trampolines_end+0xdc>
     144:	f8 fe       	.word	0xfef8	; ????
     146:	0e 03       	fmul	r16, r22
     148:	03 01       	movw	r0, r6
     14a:	03 03       	mulsu	r16, r19
     14c:	0e fc       	.word	0xfc0e	; ????
     14e:	f8 c0       	rjmp	.+496    	; 0x340 <CHARSET+0xe0>
     150:	00 01       	movw	r0, r0
     152:	03 ff       	sbrs	r16, 3
     154:	0f 3e       	cpi	r16, 0xEF	; 239
     156:	f0 c0       	rjmp	.+480    	; 0x338 <CHARSET+0xd8>
     158:	00 01       	movw	r0, r0
     15a:	03 ff       	sbrs	r16, 3
     15c:	03 01       	movw	r0, r6
	...
     16a:	00 f0       	brcs	.+0      	; 0x16c <__trampolines_end+0x104>
     16c:	80 01       	movw	r16, r0
     16e:	01 03       	mulsu	r16, r17
     170:	07 cf       	rjmp	.-498    	; 0xffffff80 <__eeprom_end+0xff7eff80>
     172:	fe 7c       	andi	r31, 0xCE	; 206
     174:	00 80       	ld	r0, Z
     176:	e0 fe       	sbrs	r14, 0
     178:	0f 06       	cpc	r0, r31
     17a:	04 04       	cpc	r0, r4
     17c:	04 07       	cpc	r16, r20
     17e:	bf fc       	.word	0xfcbf	; ????
     180:	e0 80       	ld	r14, Z
     182:	7f 7f       	andi	r23, 0xFF	; 255
     184:	3f 0f       	add	r19, r31
     186:	43 e0       	ldi	r20, 0x03	; 3
     188:	f8 f0       	brcs	.+62     	; 0x1c8 <__trampolines_end+0x160>
     18a:	e1 87       	std	Z+9, r30	; 0x09
     18c:	0f 0f       	add	r16, r31
     18e:	01 00       	.word	0x0001	; ????
     190:	00 00       	nop
     192:	ff ff       	.word	0xffff	; ????
     194:	c0 00       	.word	0x00c0	; ????
     196:	00 07       	cpc	r16, r16
     198:	3f ff       	.word	0xff3f	; ????
     19a:	c0 80       	ld	r12, Z
     19c:	00 00       	nop
     19e:	00 80       	ld	r0, Z
     1a0:	c0 ff       	sbrs	r28, 0
     1a2:	3f 07       	cpc	r19, r31
     1a4:	00 00       	nop
     1a6:	80 ff       	sbrs	r24, 0
     1a8:	80 00       	.word	0x0080	; ????
     1aa:	00 07       	cpc	r16, r16
     1ac:	3e f0       	brts	.+14     	; 0x1bc <__trampolines_end+0x154>
     1ae:	c0 ff       	sbrs	r28, 0
	...
     1bc:	00 00       	nop
     1be:	00 01       	movw	r0, r0
     1c0:	01 01       	movw	r0, r2
     1c2:	01 01       	movw	r0, r2
     1c4:	01 01       	movw	r0, r2
     1c6:	00 00       	nop
     1c8:	01 01       	movw	r0, r2
     1ca:	01 01       	movw	r0, r2
     1cc:	01 00       	.word	0x0001	; ????
     1ce:	00 00       	nop
     1d0:	00 41       	sbci	r16, 0x10	; 16
     1d2:	c1 c1       	rjmp	.+898    	; 0x556 <LCD_setBrightness>
     1d4:	c1 41       	sbci	r28, 0x11	; 17
     1d6:	40 66       	ori	r20, 0x60	; 96
     1d8:	3e 7e       	andi	r19, 0xEE	; 238
     1da:	de 1e       	adc	r13, r30
     1dc:	0f 07       	cpc	r16, r31
     1de:	03 00       	.word	0x0003	; ????
     1e0:	00 00       	nop
     1e2:	00 00       	nop
     1e4:	00 01       	movw	r0, r0
     1e6:	01 01       	movw	r0, r2
     1e8:	01 01       	movw	r0, r2
     1ea:	00 00       	nop
     1ec:	00 00       	nop
     1ee:	00 01       	movw	r0, r0
     1f0:	01 01       	movw	r0, r2
     1f2:	01 01       	movw	r0, r2
     1f4:	01 00       	.word	0x0001	; ????
     1f6:	00 00       	nop
     1f8:	00 01       	movw	r0, r0
     1fa:	01 01       	movw	r0, r2
     1fc:	01 01       	movw	r0, r2
     1fe:	00 00       	nop
     200:	00 00       	nop
     202:	01 01       	movw	r0, r2
	...
     22c:	00 00       	nop
     22e:	01 03       	mulsu	r16, r17
     230:	06 0c       	add	r0, r6
     232:	18 10       	cpse	r1, r8
     234:	30 20       	and	r3, r0
     236:	60 60       	ori	r22, 0x00	; 0
     238:	40 40       	sbci	r20, 0x00	; 0
     23a:	40 60       	ori	r20, 0x00	; 0
	...

00000260 <CHARSET>:
     260:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     270:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     280:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     290:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
     2a0:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     2b0:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     2c0:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     2d0:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     2e0:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     2f0:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     300:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     310:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     320:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     330:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     340:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     350:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     360:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     370:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     380:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     390:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     3a0:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     3b0:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     3c0:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     3d0:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     3e0:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     3f0:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     400:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     410:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     420:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     430:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000440 <__ctors_end>:
     440:	11 24       	eor	r1, r1
     442:	1f be       	out	0x3f, r1	; 63
     444:	cf ef       	ldi	r28, 0xFF	; 255
     446:	d8 e0       	ldi	r29, 0x08	; 8
     448:	de bf       	out	0x3e, r29	; 62
     44a:	cd bf       	out	0x3d, r28	; 61

0000044c <__do_copy_data>:
     44c:	11 e0       	ldi	r17, 0x01	; 1
     44e:	a0 e0       	ldi	r26, 0x00	; 0
     450:	b1 e0       	ldi	r27, 0x01	; 1
     452:	e8 e1       	ldi	r30, 0x18	; 24
     454:	f1 e1       	ldi	r31, 0x11	; 17
     456:	02 c0       	rjmp	.+4      	; 0x45c <__do_copy_data+0x10>
     458:	05 90       	lpm	r0, Z+
     45a:	0d 92       	st	X+, r0
     45c:	ac 35       	cpi	r26, 0x5C	; 92
     45e:	b1 07       	cpc	r27, r17
     460:	d9 f7       	brne	.-10     	; 0x458 <__do_copy_data+0xc>

00000462 <__do_clear_bss>:
     462:	23 e0       	ldi	r18, 0x03	; 3
     464:	ac e5       	ldi	r26, 0x5C	; 92
     466:	b1 e0       	ldi	r27, 0x01	; 1
     468:	01 c0       	rjmp	.+2      	; 0x46c <.do_clear_bss_start>

0000046a <.do_clear_bss_loop>:
     46a:	1d 92       	st	X+, r1

0000046c <.do_clear_bss_start>:
     46c:	a7 35       	cpi	r26, 0x57	; 87
     46e:	b2 07       	cpc	r27, r18
     470:	e1 f7       	brne	.-8      	; 0x46a <.do_clear_bss_loop>
     472:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <main>
     476:	0c 94 8a 08 	jmp	0x1114	; 0x1114 <_exit>

0000047a <__bad_interrupt>:
     47a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000047e <LCD_write>:
	if (menuPos == cursorPos){
		return 0;
		}else{
		return 1;
	}
}
     47e:	2a 98       	cbi	0x05, 2	; 5
     480:	61 11       	cpse	r22, r1
     482:	02 c0       	rjmp	.+4      	; 0x488 <LCD_write+0xa>
     484:	28 9a       	sbi	0x05, 0	; 5
     486:	15 c0       	rjmp	.+42     	; 0x4b2 <LCD_write+0x34>
     488:	28 98       	cbi	0x05, 0	; 5
     48a:	13 c0       	rjmp	.+38     	; 0x4b2 <LCD_write+0x34>
     48c:	ac 01       	movw	r20, r24
     48e:	02 2e       	mov	r0, r18
     490:	02 c0       	rjmp	.+4      	; 0x496 <LCD_write+0x18>
     492:	55 95       	asr	r21
     494:	47 95       	ror	r20
     496:	0a 94       	dec	r0
     498:	e2 f7       	brpl	.-8      	; 0x492 <LCD_write+0x14>
     49a:	40 ff       	sbrs	r20, 0
     49c:	02 c0       	rjmp	.+4      	; 0x4a2 <LCD_write+0x24>
     49e:	2b 9a       	sbi	0x05, 3	; 5
     4a0:	01 c0       	rjmp	.+2      	; 0x4a4 <LCD_write+0x26>
     4a2:	2b 98       	cbi	0x05, 3	; 5
     4a4:	2d 9a       	sbi	0x05, 5	; 5
     4a6:	2d 98       	cbi	0x05, 5	; 5
     4a8:	21 50       	subi	r18, 0x01	; 1
     4aa:	31 09       	sbc	r19, r1
     4ac:	78 f7       	brcc	.-34     	; 0x48c <LCD_write+0xe>
     4ae:	2a 9a       	sbi	0x05, 2	; 5
     4b0:	08 95       	ret
     4b2:	27 e0       	ldi	r18, 0x07	; 7
     4b4:	30 e0       	ldi	r19, 0x00	; 0
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	e9 cf       	rjmp	.-46     	; 0x48c <LCD_write+0xe>

000004ba <LCD_initialize>:
     4ba:	cf 93       	push	r28
     4bc:	df 93       	push	r29
     4be:	22 9a       	sbi	0x04, 2	; 4
     4c0:	24 9a       	sbi	0x04, 4	; 4
     4c2:	20 9a       	sbi	0x04, 0	; 4
     4c4:	23 9a       	sbi	0x04, 3	; 4
     4c6:	25 9a       	sbi	0x04, 5	; 4
     4c8:	2c 9a       	sbi	0x05, 4	; 5
     4ca:	2a 9a       	sbi	0x05, 2	; 5
     4cc:	8f e3       	ldi	r24, 0x3F	; 63
     4ce:	9c e9       	ldi	r25, 0x9C	; 156
     4d0:	01 97       	sbiw	r24, 0x01	; 1
     4d2:	f1 f7       	brne	.-4      	; 0x4d0 <LCD_initialize+0x16>
     4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <LCD_initialize+0x1c>
     4d6:	00 00       	nop
     4d8:	2c 98       	cbi	0x05, 4	; 5
     4da:	9f ef       	ldi	r25, 0xFF	; 255
     4dc:	2a e6       	ldi	r18, 0x6A	; 106
     4de:	83 e0       	ldi	r24, 0x03	; 3
     4e0:	91 50       	subi	r25, 0x01	; 1
     4e2:	20 40       	sbci	r18, 0x00	; 0
     4e4:	80 40       	sbci	r24, 0x00	; 0
     4e6:	e1 f7       	brne	.-8      	; 0x4e0 <LCD_initialize+0x26>
     4e8:	00 c0       	rjmp	.+0      	; 0x4ea <LCD_initialize+0x30>
     4ea:	00 00       	nop
     4ec:	2c 9a       	sbi	0x05, 4	; 5
     4ee:	2a 98       	cbi	0x05, 2	; 5
     4f0:	61 e0       	ldi	r22, 0x01	; 1
     4f2:	81 e2       	ldi	r24, 0x21	; 33
     4f4:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     4f8:	61 e0       	ldi	r22, 0x01	; 1
     4fa:	83 e1       	ldi	r24, 0x13	; 19
     4fc:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     500:	61 e0       	ldi	r22, 0x01	; 1
     502:	86 e0       	ldi	r24, 0x06	; 6
     504:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     508:	61 e0       	ldi	r22, 0x01	; 1
     50a:	82 ec       	ldi	r24, 0xC2	; 194
     50c:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     510:	61 e0       	ldi	r22, 0x01	; 1
     512:	80 e2       	ldi	r24, 0x20	; 32
     514:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     518:	61 e0       	ldi	r22, 0x01	; 1
     51a:	89 e0       	ldi	r24, 0x09	; 9
     51c:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     520:	61 e0       	ldi	r22, 0x01	; 1
     522:	80 e8       	ldi	r24, 0x80	; 128
     524:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     528:	61 e0       	ldi	r22, 0x01	; 1
     52a:	80 e4       	ldi	r24, 0x40	; 64
     52c:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     530:	c8 ef       	ldi	r28, 0xF8	; 248
     532:	d1 e0       	ldi	r29, 0x01	; 1
     534:	60 e0       	ldi	r22, 0x00	; 0
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     53c:	21 97       	sbiw	r28, 0x01	; 1
     53e:	d1 f7       	brne	.-12     	; 0x534 <LCD_initialize+0x7a>
     540:	61 e0       	ldi	r22, 0x01	; 1
     542:	88 e0       	ldi	r24, 0x08	; 8
     544:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     548:	61 e0       	ldi	r22, 0x01	; 1
     54a:	8c e0       	ldi	r24, 0x0C	; 12
     54c:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     550:	df 91       	pop	r29
     552:	cf 91       	pop	r28
     554:	08 95       	ret

00000556 <LCD_setBrightness>:
     556:	29 9a       	sbi	0x05, 1	; 5
     558:	08 95       	ret

0000055a <LCD_setPixel>:
     55a:	26 2f       	mov	r18, r22
     55c:	26 95       	lsr	r18
     55e:	26 95       	lsr	r18
     560:	26 95       	lsr	r18
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	34 e5       	ldi	r19, 0x54	; 84
     566:	23 9f       	mul	r18, r19
     568:	80 0d       	add	r24, r0
     56a:	91 1d       	adc	r25, r1
     56c:	11 24       	eor	r1, r1
     56e:	44 23       	and	r20, r20
     570:	79 f0       	breq	.+30     	; 0x590 <LCD_setPixel+0x36>
     572:	fc 01       	movw	r30, r24
     574:	e3 5a       	subi	r30, 0xA3	; 163
     576:	fe 4f       	sbci	r31, 0xFE	; 254
     578:	67 70       	andi	r22, 0x07	; 7
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	02 c0       	rjmp	.+4      	; 0x584 <LCD_setPixel+0x2a>
     580:	88 0f       	add	r24, r24
     582:	99 1f       	adc	r25, r25
     584:	6a 95       	dec	r22
     586:	e2 f7       	brpl	.-8      	; 0x580 <LCD_setPixel+0x26>
     588:	90 81       	ld	r25, Z
     58a:	89 2b       	or	r24, r25
     58c:	80 83       	st	Z, r24
     58e:	08 95       	ret
     590:	fc 01       	movw	r30, r24
     592:	e3 5a       	subi	r30, 0xA3	; 163
     594:	fe 4f       	sbci	r31, 0xFE	; 254
     596:	67 70       	andi	r22, 0x07	; 7
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	02 c0       	rjmp	.+4      	; 0x5a2 <LCD_setPixel+0x48>
     59e:	88 0f       	add	r24, r24
     5a0:	99 1f       	adc	r25, r25
     5a2:	6a 95       	dec	r22
     5a4:	e2 f7       	brpl	.-8      	; 0x59e <LCD_setPixel+0x44>
     5a6:	80 95       	com	r24
     5a8:	90 81       	ld	r25, Z
     5aa:	89 23       	and	r24, r25
     5ac:	80 83       	st	Z, r24
     5ae:	08 95       	ret

000005b0 <LCD_setBitmap>:
     5b0:	fc 01       	movw	r30, r24
     5b2:	ad e5       	ldi	r26, 0x5D	; 93
     5b4:	b1 e0       	ldi	r27, 0x01	; 1
     5b6:	25 e5       	ldi	r18, 0x55	; 85
     5b8:	33 e0       	ldi	r19, 0x03	; 3
     5ba:	84 91       	lpm	r24, Z
     5bc:	8d 93       	st	X+, r24
     5be:	31 96       	adiw	r30, 0x01	; 1
     5c0:	a2 17       	cp	r26, r18
     5c2:	b3 07       	cpc	r27, r19
     5c4:	d1 f7       	brne	.-12     	; 0x5ba <LCD_setBitmap+0xa>
     5c6:	08 95       	ret

000005c8 <LCD_writeChar>:
     5c8:	2f 92       	push	r2
     5ca:	3f 92       	push	r3
     5cc:	4f 92       	push	r4
     5ce:	5f 92       	push	r5
     5d0:	6f 92       	push	r6
     5d2:	7f 92       	push	r7
     5d4:	8f 92       	push	r8
     5d6:	9f 92       	push	r9
     5d8:	af 92       	push	r10
     5da:	bf 92       	push	r11
     5dc:	cf 92       	push	r12
     5de:	df 92       	push	r13
     5e0:	ef 92       	push	r14
     5e2:	ff 92       	push	r15
     5e4:	0f 93       	push	r16
     5e6:	1f 93       	push	r17
     5e8:	cf 93       	push	r28
     5ea:	df 93       	push	r29
     5ec:	00 d0       	rcall	.+0      	; 0x5ee <LCD_writeChar+0x26>
     5ee:	1f 92       	push	r1
     5f0:	cd b7       	in	r28, 0x3d	; 61
     5f2:	de b7       	in	r29, 0x3e	; 62
     5f4:	c2 2e       	mov	r12, r18
     5f6:	d1 2c       	mov	r13, r1
     5f8:	36 01       	movw	r6, r12
     5fa:	66 0c       	add	r6, r6
     5fc:	77 1c       	adc	r7, r7
     5fe:	66 0c       	add	r6, r6
     600:	77 1c       	adc	r7, r7
     602:	6c 0c       	add	r6, r12
     604:	7d 1c       	adc	r7, r13
     606:	16 14       	cp	r1, r6
     608:	17 04       	cpc	r1, r7
     60a:	0c f0       	brlt	.+2      	; 0x60e <LCD_writeChar+0x46>
     60c:	55 c0       	rjmp	.+170    	; 0x6b8 <LCD_writeChar+0xf0>
     60e:	49 83       	std	Y+1, r20	; 0x01
     610:	56 01       	movw	r10, r12
     612:	aa 0c       	add	r10, r10
     614:	bb 1c       	adc	r11, r11
     616:	aa 0c       	add	r10, r10
     618:	bb 1c       	adc	r11, r11
     61a:	aa 0c       	add	r10, r10
     61c:	bb 1c       	adc	r11, r11
     61e:	36 2e       	mov	r3, r22
     620:	81 2c       	mov	r8, r1
     622:	91 2c       	mov	r9, r1
     624:	48 2e       	mov	r4, r24
     626:	51 2c       	mov	r5, r1
     628:	c2 01       	movw	r24, r4
     62a:	80 97       	sbiw	r24, 0x20	; 32
     62c:	2c 01       	movw	r4, r24
     62e:	44 0c       	add	r4, r4
     630:	55 1c       	adc	r5, r5
     632:	44 0c       	add	r4, r4
     634:	55 1c       	adc	r5, r5
     636:	48 0e       	add	r4, r24
     638:	59 1e       	adc	r5, r25
     63a:	22 24       	eor	r2, r2
     63c:	23 94       	inc	r2
     63e:	c4 01       	movw	r24, r8
     640:	b6 01       	movw	r22, r12
     642:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__divmodhi4>
     646:	f2 01       	movw	r30, r4
     648:	e6 0f       	add	r30, r22
     64a:	f7 1f       	adc	r31, r23
     64c:	e0 5a       	subi	r30, 0xA0	; 160
     64e:	fd 4f       	sbci	r31, 0xFD	; 253
     650:	e4 91       	lpm	r30, Z
     652:	1a 14       	cp	r1, r10
     654:	1b 04       	cpc	r1, r11
     656:	44 f5       	brge	.+80     	; 0x6a8 <LCD_writeChar+0xe0>
     658:	19 81       	ldd	r17, Y+1	; 0x01
     65a:	1b 82       	std	Y+3, r1	; 0x03
     65c:	1a 82       	std	Y+2, r1	; 0x02
     65e:	ee 2e       	mov	r14, r30
     660:	f1 2c       	mov	r15, r1
     662:	8a 81       	ldd	r24, Y+2	; 0x02
     664:	9b 81       	ldd	r25, Y+3	; 0x03
     666:	b6 01       	movw	r22, r12
     668:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__divmodhi4>
     66c:	c7 01       	movw	r24, r14
     66e:	02 c0       	rjmp	.+4      	; 0x674 <LCD_writeChar+0xac>
     670:	95 95       	asr	r25
     672:	87 95       	ror	r24
     674:	6a 95       	dec	r22
     676:	e2 f7       	brpl	.-8      	; 0x670 <LCD_writeChar+0xa8>
     678:	80 ff       	sbrs	r24, 0
     67a:	06 c0       	rjmp	.+12     	; 0x688 <LCD_writeChar+0xc0>
     67c:	40 2f       	mov	r20, r16
     67e:	61 2f       	mov	r22, r17
     680:	83 2d       	mov	r24, r3
     682:	0e 94 ad 02 	call	0x55a	; 0x55a <LCD_setPixel>
     686:	07 c0       	rjmp	.+14     	; 0x696 <LCD_writeChar+0xce>
     688:	42 2d       	mov	r20, r2
     68a:	01 11       	cpse	r16, r1
     68c:	40 e0       	ldi	r20, 0x00	; 0
     68e:	61 2f       	mov	r22, r17
     690:	83 2d       	mov	r24, r3
     692:	0e 94 ad 02 	call	0x55a	; 0x55a <LCD_setPixel>
     696:	8a 81       	ldd	r24, Y+2	; 0x02
     698:	9b 81       	ldd	r25, Y+3	; 0x03
     69a:	01 96       	adiw	r24, 0x01	; 1
     69c:	9b 83       	std	Y+3, r25	; 0x03
     69e:	8a 83       	std	Y+2, r24	; 0x02
     6a0:	1f 5f       	subi	r17, 0xFF	; 255
     6a2:	8a 15       	cp	r24, r10
     6a4:	9b 05       	cpc	r25, r11
     6a6:	e9 f6       	brne	.-70     	; 0x662 <LCD_writeChar+0x9a>
     6a8:	9f ef       	ldi	r25, 0xFF	; 255
     6aa:	89 1a       	sub	r8, r25
     6ac:	99 0a       	sbc	r9, r25
     6ae:	33 94       	inc	r3
     6b0:	86 14       	cp	r8, r6
     6b2:	97 04       	cpc	r9, r7
     6b4:	09 f0       	breq	.+2      	; 0x6b8 <LCD_writeChar+0xf0>
     6b6:	c3 cf       	rjmp	.-122    	; 0x63e <LCD_writeChar+0x76>
     6b8:	0f 90       	pop	r0
     6ba:	0f 90       	pop	r0
     6bc:	0f 90       	pop	r0
     6be:	df 91       	pop	r29
     6c0:	cf 91       	pop	r28
     6c2:	1f 91       	pop	r17
     6c4:	0f 91       	pop	r16
     6c6:	ff 90       	pop	r15
     6c8:	ef 90       	pop	r14
     6ca:	df 90       	pop	r13
     6cc:	cf 90       	pop	r12
     6ce:	bf 90       	pop	r11
     6d0:	af 90       	pop	r10
     6d2:	9f 90       	pop	r9
     6d4:	8f 90       	pop	r8
     6d6:	7f 90       	pop	r7
     6d8:	6f 90       	pop	r6
     6da:	5f 90       	pop	r5
     6dc:	4f 90       	pop	r4
     6de:	3f 90       	pop	r3
     6e0:	2f 90       	pop	r2
     6e2:	08 95       	ret

000006e4 <LCD_writeString>:
     6e4:	9f 92       	push	r9
     6e6:	af 92       	push	r10
     6e8:	bf 92       	push	r11
     6ea:	cf 92       	push	r12
     6ec:	df 92       	push	r13
     6ee:	ef 92       	push	r14
     6f0:	ff 92       	push	r15
     6f2:	0f 93       	push	r16
     6f4:	1f 93       	push	r17
     6f6:	cf 93       	push	r28
     6f8:	df 93       	push	r29
     6fa:	e6 2e       	mov	r14, r22
     6fc:	b4 2e       	mov	r11, r20
     6fe:	92 2e       	mov	r9, r18
     700:	d0 2f       	mov	r29, r16
     702:	6c 01       	movw	r12, r24
     704:	ff 24       	eor	r15, r15
     706:	f3 94       	inc	r15
     708:	a1 2c       	mov	r10, r1
     70a:	25 c0       	rjmp	.+74     	; 0x756 <LCD_writeString+0x72>
     70c:	0d 2f       	mov	r16, r29
     70e:	29 2d       	mov	r18, r9
     710:	4b 2d       	mov	r20, r11
     712:	6e 2d       	mov	r22, r14
     714:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <LCD_writeChar>
     718:	15 e0       	ldi	r17, 0x05	; 5
     71a:	1e 0d       	add	r17, r14
     71c:	8b 2d       	mov	r24, r11
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	9c 01       	movw	r18, r24
     722:	28 5f       	subi	r18, 0xF8	; 248
     724:	3f 4f       	sbci	r19, 0xFF	; 255
     726:	82 17       	cp	r24, r18
     728:	93 07       	cpc	r25, r19
     72a:	6c f4       	brge	.+26     	; 0x746 <LCD_writeString+0x62>
     72c:	08 e0       	ldi	r16, 0x08	; 8
     72e:	0b 0d       	add	r16, r11
     730:	cb 2d       	mov	r28, r11
     732:	4f 2d       	mov	r20, r15
     734:	d1 11       	cpse	r29, r1
     736:	4a 2d       	mov	r20, r10
     738:	6c 2f       	mov	r22, r28
     73a:	81 2f       	mov	r24, r17
     73c:	0e 94 ad 02 	call	0x55a	; 0x55a <LCD_setPixel>
     740:	cf 5f       	subi	r28, 0xFF	; 255
     742:	c0 13       	cpse	r28, r16
     744:	f6 cf       	rjmp	.-20     	; 0x732 <LCD_writeString+0x4e>
     746:	86 e0       	ldi	r24, 0x06	; 6
     748:	e8 0e       	add	r14, r24
     74a:	ef e4       	ldi	r30, 0x4F	; 79
     74c:	ee 15       	cp	r30, r14
     74e:	18 f4       	brcc	.+6      	; 0x756 <LCD_writeString+0x72>
     750:	f8 e0       	ldi	r31, 0x08	; 8
     752:	bf 0e       	add	r11, r31
     754:	e1 2c       	mov	r14, r1
     756:	f6 01       	movw	r30, r12
     758:	81 91       	ld	r24, Z+
     75a:	6f 01       	movw	r12, r30
     75c:	81 11       	cpse	r24, r1
     75e:	d6 cf       	rjmp	.-84     	; 0x70c <LCD_writeString+0x28>
     760:	df 91       	pop	r29
     762:	cf 91       	pop	r28
     764:	1f 91       	pop	r17
     766:	0f 91       	pop	r16
     768:	ff 90       	pop	r15
     76a:	ef 90       	pop	r14
     76c:	df 90       	pop	r13
     76e:	cf 90       	pop	r12
     770:	bf 90       	pop	r11
     772:	af 90       	pop	r10
     774:	9f 90       	pop	r9
     776:	08 95       	ret

00000778 <LCD_clear>:
     778:	ed e5       	ldi	r30, 0x5D	; 93
     77a:	f1 e0       	ldi	r31, 0x01	; 1
     77c:	25 e5       	ldi	r18, 0x55	; 85
     77e:	33 e0       	ldi	r19, 0x03	; 3
     780:	9f ef       	ldi	r25, 0xFF	; 255
     782:	88 23       	and	r24, r24
     784:	11 f0       	breq	.+4      	; 0x78a <LCD_clear+0x12>
     786:	90 83       	st	Z, r25
     788:	01 c0       	rjmp	.+2      	; 0x78c <LCD_clear+0x14>
     78a:	10 82       	st	Z, r1
     78c:	31 96       	adiw	r30, 0x01	; 1
     78e:	e2 17       	cp	r30, r18
     790:	f3 07       	cpc	r31, r19
     792:	b9 f7       	brne	.-18     	; 0x782 <LCD_clear+0xa>
     794:	08 95       	ret

00000796 <LCD_update>:
     796:	0f 93       	push	r16
     798:	1f 93       	push	r17
     79a:	cf 93       	push	r28
     79c:	df 93       	push	r29
     79e:	61 e0       	ldi	r22, 0x01	; 1
     7a0:	80 e8       	ldi	r24, 0x80	; 128
     7a2:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     7a6:	61 e0       	ldi	r22, 0x01	; 1
     7a8:	80 e4       	ldi	r24, 0x40	; 64
     7aa:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     7ae:	cd e5       	ldi	r28, 0x5D	; 93
     7b0:	d1 e0       	ldi	r29, 0x01	; 1
     7b2:	05 e5       	ldi	r16, 0x55	; 85
     7b4:	13 e0       	ldi	r17, 0x03	; 3
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	89 91       	ld	r24, Y+
     7ba:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_write>
     7be:	c0 17       	cp	r28, r16
     7c0:	d1 07       	cpc	r29, r17
     7c2:	c9 f7       	brne	.-14     	; 0x7b6 <LCD_update+0x20>
     7c4:	df 91       	pop	r29
     7c6:	cf 91       	pop	r28
     7c8:	1f 91       	pop	r17
     7ca:	0f 91       	pop	r16
     7cc:	08 95       	ret

000007ce <redrawMenu>:

void redrawMenu(){ // redraws menu
     7ce:	cf 92       	push	r12
     7d0:	df 92       	push	r13
     7d2:	ef 92       	push	r14
     7d4:	ff 92       	push	r15
     7d6:	0f 93       	push	r16
     7d8:	1f 93       	push	r17
     7da:	cf 93       	push	r28
     7dc:	df 93       	push	r29
	LCD_clear(WHITE);
     7de:	80 e0       	ldi	r24, 0x00	; 0
     7e0:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_clear>
	LCD_writeString(textOnDisp[0],6,0,1,BLACK);
     7e4:	01 e0       	ldi	r16, 0x01	; 1
     7e6:	21 e0       	ldi	r18, 0x01	; 1
     7e8:	40 e0       	ldi	r20, 0x00	; 0
     7ea:	66 e0       	ldi	r22, 0x06	; 6
     7ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     7f0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     7f4:	0e 94 72 03 	call	0x6e4	; 0x6e4 <LCD_writeString>
     7f8:	0f 2e       	mov	r0, r31
     7fa:	f2 e0       	ldi	r31, 0x02	; 2
     7fc:	cf 2e       	mov	r12, r31
     7fe:	f1 e0       	ldi	r31, 0x01	; 1
     800:	df 2e       	mov	r13, r31
     802:	f0 2d       	mov	r31, r0
     804:	cc e0       	ldi	r28, 0x0C	; 12
	for (int i=1;i<4;i++){
     806:	ee 24       	eor	r14, r14
     808:	e3 94       	inc	r14
     80a:	f1 2c       	mov	r15, r1
		LCD_writeString(textOnDisp[i],0,i*12,1,isSelected(i));
     80c:	d1 e0       	ldi	r29, 0x01	; 1
     80e:	10 e0       	ldi	r17, 0x00	; 0
     810:	f6 01       	movw	r30, r12
     812:	81 91       	ld	r24, Z+
     814:	91 91       	ld	r25, Z+
     816:	6f 01       	movw	r12, r30
     818:	0d 2f       	mov	r16, r29
     81a:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <cursorPos>
     81e:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <cursorPos+0x1>
     822:	2e 15       	cp	r18, r14
     824:	3f 05       	cpc	r19, r15
     826:	09 f4       	brne	.+2      	; 0x82a <redrawMenu+0x5c>
     828:	01 2f       	mov	r16, r17
     82a:	2d 2f       	mov	r18, r29
     82c:	4c 2f       	mov	r20, r28
     82e:	61 2f       	mov	r22, r17
     830:	0e 94 72 03 	call	0x6e4	; 0x6e4 <LCD_writeString>
}

void redrawMenu(){ // redraws menu
	LCD_clear(WHITE);
	LCD_writeString(textOnDisp[0],6,0,1,BLACK);
	for (int i=1;i<4;i++){
     834:	ff ef       	ldi	r31, 0xFF	; 255
     836:	ef 1a       	sub	r14, r31
     838:	ff 0a       	sbc	r15, r31
     83a:	c4 5f       	subi	r28, 0xF4	; 244
     83c:	c0 33       	cpi	r28, 0x30	; 48
     83e:	41 f7       	brne	.-48     	; 0x810 <redrawMenu+0x42>
		LCD_writeString(textOnDisp[i],0,i*12,1,isSelected(i));
	}
	LCD_update();
     840:	0e 94 cb 03 	call	0x796	; 0x796 <LCD_update>
}
     844:	df 91       	pop	r29
     846:	cf 91       	pop	r28
     848:	1f 91       	pop	r17
     84a:	0f 91       	pop	r16
     84c:	ff 90       	pop	r15
     84e:	ef 90       	pop	r14
     850:	df 90       	pop	r13
     852:	cf 90       	pop	r12
     854:	08 95       	ret

00000856 <about>:

void about(){ // about section
     856:	0f 93       	push	r16
	LCD_clear(WHITE);
     858:	80 e0       	ldi	r24, 0x00	; 0
     85a:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_clear>
	LCD_writeString("A B O U T",15,0,1,BLACK);
     85e:	01 e0       	ldi	r16, 0x01	; 1
     860:	21 e0       	ldi	r18, 0x01	; 1
     862:	40 e0       	ldi	r20, 0x00	; 0
     864:	6f e0       	ldi	r22, 0x0F	; 15
     866:	8c e0       	ldi	r24, 0x0C	; 12
     868:	91 e0       	ldi	r25, 0x01	; 1
     86a:	0e 94 72 03 	call	0x6e4	; 0x6e4 <LCD_writeString>
	LCD_writeString("Made by Egor",0,15,1,BLACK);
     86e:	21 e0       	ldi	r18, 0x01	; 1
     870:	4f e0       	ldi	r20, 0x0F	; 15
     872:	60 e0       	ldi	r22, 0x00	; 0
     874:	86 e1       	ldi	r24, 0x16	; 22
     876:	91 e0       	ldi	r25, 0x01	; 1
     878:	0e 94 72 03 	call	0x6e4	; 0x6e4 <LCD_writeString>
	LCD_writeString("417342",0,25,1,BLACK);
     87c:	21 e0       	ldi	r18, 0x01	; 1
     87e:	49 e1       	ldi	r20, 0x19	; 25
     880:	60 e0       	ldi	r22, 0x00	; 0
     882:	83 e2       	ldi	r24, 0x23	; 35
     884:	91 e0       	ldi	r25, 0x01	; 1
     886:	0e 94 72 03 	call	0x6e4	; 0x6e4 <LCD_writeString>
	LCD_writeString("April 2017",0,35,1,BLACK);
     88a:	21 e0       	ldi	r18, 0x01	; 1
     88c:	43 e2       	ldi	r20, 0x23	; 35
     88e:	60 e0       	ldi	r22, 0x00	; 0
     890:	8a e2       	ldi	r24, 0x2A	; 42
     892:	91 e0       	ldi	r25, 0x01	; 1
     894:	0e 94 72 03 	call	0x6e4	; 0x6e4 <LCD_writeString>
}
     898:	0f 91       	pop	r16
     89a:	08 95       	ret

0000089c <luminosity>:

void luminosity(){ // luminosity check
     89c:	8f 92       	push	r8
     89e:	9f 92       	push	r9
     8a0:	af 92       	push	r10
     8a2:	bf 92       	push	r11
     8a4:	ff 92       	push	r15
     8a6:	0f 93       	push	r16
     8a8:	1f 93       	push	r17
     8aa:	cf 93       	push	r28
     8ac:	df 93       	push	r29
	int LDR_value = ADCW; // adc input
     8ae:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     8b2:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	float voltage = LDR_value*(0.0048828125);
	float resistance = (10 * 5)/voltage - 10;
	int lux = floor(255.84 * pow(resistance,(-10/9)));
     8b6:	07 2e       	mov	r0, r23
     8b8:	00 0c       	add	r0, r0
     8ba:	88 0b       	sbc	r24, r24
     8bc:	99 0b       	sbc	r25, r25
     8be:	0e 94 11 07 	call	0xe22	; 0xe22 <__floatsisf>
     8c2:	20 e0       	ldi	r18, 0x00	; 0
     8c4:	30 e0       	ldi	r19, 0x00	; 0
     8c6:	40 ea       	ldi	r20, 0xA0	; 160
     8c8:	5b e3       	ldi	r21, 0x3B	; 59
     8ca:	0e 94 f5 07 	call	0xfea	; 0xfea <__mulsf3>
     8ce:	9b 01       	movw	r18, r22
     8d0:	ac 01       	movw	r20, r24
     8d2:	60 e0       	ldi	r22, 0x00	; 0
     8d4:	70 e0       	ldi	r23, 0x00	; 0
     8d6:	88 e4       	ldi	r24, 0x48	; 72
     8d8:	92 e4       	ldi	r25, 0x42	; 66
     8da:	0e 94 67 06 	call	0xcce	; 0xcce <__divsf3>
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	40 e2       	ldi	r20, 0x20	; 32
     8e4:	51 e4       	ldi	r21, 0x41	; 65
     8e6:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__subsf3>
     8ea:	9b 01       	movw	r18, r22
     8ec:	ac 01       	movw	r20, r24
     8ee:	60 e0       	ldi	r22, 0x00	; 0
     8f0:	70 e0       	ldi	r23, 0x00	; 0
     8f2:	80 e8       	ldi	r24, 0x80	; 128
     8f4:	9f e3       	ldi	r25, 0x3F	; 63
     8f6:	0e 94 67 06 	call	0xcce	; 0xcce <__divsf3>
     8fa:	2a e0       	ldi	r18, 0x0A	; 10
     8fc:	37 ed       	ldi	r19, 0xD7	; 215
     8fe:	4f e7       	ldi	r20, 0x7F	; 127
     900:	53 e4       	ldi	r21, 0x43	; 67
     902:	0e 94 f5 07 	call	0xfea	; 0xfea <__mulsf3>
     906:	0e 94 4c 07 	call	0xe98	; 0xe98 <floor>
     90a:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <__fixsfsi>
     90e:	4b 01       	movw	r8, r22
     910:	5c 01       	movw	r10, r24
	LCD_clear(WHITE);
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_clear>
	uint8_t luxHundr = floor(lux/100); // splitting into numbers
     918:	c4 01       	movw	r24, r8
     91a:	64 e6       	ldi	r22, 0x64	; 100
     91c:	70 e0       	ldi	r23, 0x00	; 0
     91e:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__divmodhi4>
     922:	07 2e       	mov	r0, r23
     924:	00 0c       	add	r0, r0
     926:	88 0b       	sbc	r24, r24
     928:	99 0b       	sbc	r25, r25
     92a:	0e 94 11 07 	call	0xe22	; 0xe22 <__floatsisf>
     92e:	0e 94 4c 07 	call	0xe98	; 0xe98 <floor>
     932:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__fixunssfsi>
     936:	f6 2e       	mov	r15, r22
	uint8_t luxTens = floor((lux-luxHundr*100)/10);
     938:	2c e9       	ldi	r18, 0x9C	; 156
     93a:	26 03       	mulsu	r18, r22
     93c:	e0 01       	movw	r28, r0
     93e:	11 24       	eor	r1, r1
     940:	c8 0d       	add	r28, r8
     942:	d9 1d       	adc	r29, r9
     944:	ce 01       	movw	r24, r28
     946:	6a e0       	ldi	r22, 0x0A	; 10
     948:	70 e0       	ldi	r23, 0x00	; 0
     94a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__divmodhi4>
     94e:	07 2e       	mov	r0, r23
     950:	00 0c       	add	r0, r0
     952:	88 0b       	sbc	r24, r24
     954:	99 0b       	sbc	r25, r25
     956:	0e 94 11 07 	call	0xe22	; 0xe22 <__floatsisf>
     95a:	0e 94 4c 07 	call	0xe98	; 0xe98 <floor>
     95e:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__fixunssfsi>
     962:	16 2f       	mov	r17, r22
	uint8_t luxOnes = floor(lux-luxHundr*100-luxTens*10);
     964:	be 01       	movw	r22, r28
     966:	3a e0       	ldi	r19, 0x0A	; 10
     968:	13 9f       	mul	r17, r19
     96a:	60 19       	sub	r22, r0
     96c:	71 09       	sbc	r23, r1
     96e:	11 24       	eor	r1, r1
     970:	07 2e       	mov	r0, r23
     972:	00 0c       	add	r0, r0
     974:	88 0b       	sbc	r24, r24
     976:	99 0b       	sbc	r25, r25
     978:	0e 94 11 07 	call	0xe22	; 0xe22 <__floatsisf>
     97c:	0e 94 4c 07 	call	0xe98	; 0xe98 <floor>
     980:	4b 01       	movw	r8, r22
     982:	5c 01       	movw	r10, r24
	LCD_writeChar((char)(luxHundr+48),18,16,1,BLACK); // printing
     984:	01 e0       	ldi	r16, 0x01	; 1
     986:	21 e0       	ldi	r18, 0x01	; 1
     988:	40 e1       	ldi	r20, 0x10	; 16
     98a:	62 e1       	ldi	r22, 0x12	; 18
     98c:	80 e3       	ldi	r24, 0x30	; 48
     98e:	8f 0d       	add	r24, r15
     990:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <LCD_writeChar>
	LCD_writeChar((char)(luxTens+48),24,16,1,BLACK);
     994:	21 e0       	ldi	r18, 0x01	; 1
     996:	40 e1       	ldi	r20, 0x10	; 16
     998:	68 e1       	ldi	r22, 0x18	; 24
     99a:	80 e3       	ldi	r24, 0x30	; 48
     99c:	81 0f       	add	r24, r17
     99e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <LCD_writeChar>
	LCD_writeChar((char)(luxOnes+48),30,16,1,BLACK);
     9a2:	c5 01       	movw	r24, r10
     9a4:	b4 01       	movw	r22, r8
     9a6:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__fixunssfsi>
     9aa:	86 2f       	mov	r24, r22
     9ac:	21 e0       	ldi	r18, 0x01	; 1
     9ae:	40 e1       	ldi	r20, 0x10	; 16
     9b0:	6e e1       	ldi	r22, 0x1E	; 30
     9b2:	80 5d       	subi	r24, 0xD0	; 208
     9b4:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <LCD_writeChar>
	LCD_writeString("LUX",18+6*4,8*2,1,BLACK);
     9b8:	21 e0       	ldi	r18, 0x01	; 1
     9ba:	40 e1       	ldi	r20, 0x10	; 16
     9bc:	6a e2       	ldi	r22, 0x2A	; 42
     9be:	85 e3       	ldi	r24, 0x35	; 53
     9c0:	91 e0       	ldi	r25, 0x01	; 1
     9c2:	0e 94 72 03 	call	0x6e4	; 0x6e4 <LCD_writeString>
	LCD_update();
     9c6:	0e 94 cb 03 	call	0x796	; 0x796 <LCD_update>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9ca:	8f ef       	ldi	r24, 0xFF	; 255
     9cc:	94 e3       	ldi	r25, 0x34	; 52
     9ce:	2c e0       	ldi	r18, 0x0C	; 12
     9d0:	81 50       	subi	r24, 0x01	; 1
     9d2:	90 40       	sbci	r25, 0x00	; 0
     9d4:	20 40       	sbci	r18, 0x00	; 0
     9d6:	e1 f7       	brne	.-8      	; 0x9d0 <__stack+0xd1>
     9d8:	00 c0       	rjmp	.+0      	; 0x9da <__stack+0xdb>
     9da:	00 00       	nop
	_delay_ms(250);
}
     9dc:	df 91       	pop	r29
     9de:	cf 91       	pop	r28
     9e0:	1f 91       	pop	r17
     9e2:	0f 91       	pop	r16
     9e4:	ff 90       	pop	r15
     9e6:	bf 90       	pop	r11
     9e8:	af 90       	pop	r10
     9ea:	9f 90       	pop	r9
     9ec:	8f 90       	pop	r8
     9ee:	08 95       	ret

000009f0 <main>:
int isSelected(); // checks if a menu item is selected
void luminosity(); // runs the luminosity sensor

int main(void)
{
	DDR_LCD |= (1<<LCD_LED); // pin 9 is output
     9f0:	21 9a       	sbi	0x04, 1	; 4
	DDRD = 0b00000000; // pins 5,6,7 are inputs. Others don't matter
     9f2:	1a b8       	out	0x0a, r1	; 10
	DDRC = 0b00000000; // pin A2 (PC2) is an input. Others don't matter
     9f4:	17 b8       	out	0x07, r1	; 7
	PCICR |=  (1<<PCIE2); // enable PCINT on port B
     9f6:	e8 e6       	ldi	r30, 0x68	; 104
     9f8:	f0 e0       	ldi	r31, 0x00	; 0
     9fa:	80 81       	ld	r24, Z
     9fc:	84 60       	ori	r24, 0x04	; 4
     9fe:	80 83       	st	Z, r24
	PCMSK2 |= (1<<PCINT20)|(1<<PCINT21)|(1<<PCINT22); // enable interrupts on pins 5,6,7
     a00:	ed e6       	ldi	r30, 0x6D	; 109
     a02:	f0 e0       	ldi	r31, 0x00	; 0
     a04:	80 81       	ld	r24, Z
     a06:	80 67       	ori	r24, 0x70	; 112
     a08:	80 83       	st	Z, r24
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));    //Prescaler at 128 so we have an 125Khz clock source
     a0a:	ea e7       	ldi	r30, 0x7A	; 122
     a0c:	f0 e0       	ldi	r31, 0x00	; 0
     a0e:	80 81       	ld	r24, Z
     a10:	87 60       	ori	r24, 0x07	; 7
     a12:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0)|(1<<MUX1);
     a14:	ac e7       	ldi	r26, 0x7C	; 124
     a16:	b0 e0       	ldi	r27, 0x00	; 0
     a18:	8c 91       	ld	r24, X
     a1a:	82 64       	ori	r24, 0x42	; 66
     a1c:	8c 93       	st	X, r24
	ADMUX &= ~(1<<REFS1);   //Avcc(+5v) as voltage reference
     a1e:	8c 91       	ld	r24, X
     a20:	8f 77       	andi	r24, 0x7F	; 127
     a22:	8c 93       	st	X, r24
	ADCSRB &= ~((1<<ADTS2)|(1<<ADTS1)|(1<<ADTS0)); //ADC in free-running mode
     a24:	ab e7       	ldi	r26, 0x7B	; 123
     a26:	b0 e0       	ldi	r27, 0x00	; 0
     a28:	8c 91       	ld	r24, X
     a2a:	88 7f       	andi	r24, 0xF8	; 248
     a2c:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADATE)|(1<<ADEN)|(1<<ADSC); //define signal source, power up, start converting
     a2e:	80 81       	ld	r24, Z
     a30:	80 6e       	ori	r24, 0xE0	; 224
     a32:	80 83       	st	Z, r24
    LCD_initialize(); // init LCD
     a34:	0e 94 5d 02 	call	0x4ba	; 0x4ba <LCD_initialize>
	LCD_setBrightness();
     a38:	0e 94 ab 02 	call	0x556	; 0x556 <LCD_setBrightness>
	LCD_setBitmap(saxionLogo);
     a3c:	88 e6       	ldi	r24, 0x68	; 104
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_setBitmap>
	LCD_update();
     a44:	0e 94 cb 03 	call	0x796	; 0x796 <LCD_update>
     a48:	2f ef       	ldi	r18, 0xFF	; 255
     a4a:	8d e3       	ldi	r24, 0x3D	; 61
     a4c:	99 e4       	ldi	r25, 0x49	; 73
     a4e:	21 50       	subi	r18, 0x01	; 1
     a50:	80 40       	sbci	r24, 0x00	; 0
     a52:	90 40       	sbci	r25, 0x00	; 0
     a54:	e1 f7       	brne	.-8      	; 0xa4e <main+0x5e>
     a56:	00 c0       	rjmp	.+0      	; 0xa58 <main+0x68>
     a58:	00 00       	nop
	_delay_ms(1500);
	sei(); // enable interrupts
     a5a:	78 94       	sei
						LCD_setBitmap(saxionLogo);
						LCD_update();
					}
					}else{ // if we are not in menu return there
					LCD_clear(WHITE);
					isInMenu = 1;
     a5c:	ee 24       	eor	r14, r14
     a5e:	e3 94       	inc	r14
					displaycase = 4;
     a60:	68 94       	set
     a62:	ff 24       	eor	r15, r15
     a64:	f2 f8       	bld	r15, 2
    while (1) // loop
    {
		switch (displaycase){ // switch depending on which buttom we press
			case 1: // we go down
				if (cursorPos == 3){
					cursorPos = 1;
     a66:	01 e0       	ldi	r16, 0x01	; 1
     a68:	10 e0       	ldi	r17, 0x00	; 0
				displaycase = 4;
				redrawMenu();
				break;
			case 2: // we go up
				if (cursorPos == 1){
					cursorPos = 3;
     a6a:	c3 e0       	ldi	r28, 0x03	; 3
     a6c:	d0 e0       	ldi	r29, 0x00	; 0
	LCD_update();
	_delay_ms(1500);
	sei(); // enable interrupts
    while (1) // loop
    {
		switch (displaycase){ // switch depending on which buttom we press
     a6e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <displaycase>
     a72:	82 30       	cpi	r24, 0x02	; 2
     a74:	01 f1       	breq	.+64     	; 0xab6 <main+0xc6>
     a76:	18 f4       	brcc	.+6      	; 0xa7e <main+0x8e>
     a78:	81 30       	cpi	r24, 0x01	; 1
     a7a:	39 f0       	breq	.+14     	; 0xa8a <main+0x9a>
     a7c:	f8 cf       	rjmp	.-16     	; 0xa6e <main+0x7e>
     a7e:	83 30       	cpi	r24, 0x03	; 3
     a80:	81 f1       	breq	.+96     	; 0xae2 <main+0xf2>
     a82:	84 30       	cpi	r24, 0x04	; 4
     a84:	09 f4       	brne	.+2      	; 0xa88 <main+0x98>
     a86:	6c c0       	rjmp	.+216    	; 0xb60 <main+0x170>
     a88:	f2 cf       	rjmp	.-28     	; 0xa6e <main+0x7e>
			case 1: // we go down
				if (cursorPos == 3){
     a8a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <cursorPos>
     a8e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <cursorPos+0x1>
     a92:	83 30       	cpi	r24, 0x03	; 3
     a94:	91 05       	cpc	r25, r1
     a96:	29 f4       	brne	.+10     	; 0xaa2 <main+0xb2>
					cursorPos = 1;
     a98:	10 93 0b 01 	sts	0x010B, r17	; 0x80010b <cursorPos+0x1>
     a9c:	00 93 0a 01 	sts	0x010A, r16	; 0x80010a <cursorPos>
     aa0:	05 c0       	rjmp	.+10     	; 0xaac <main+0xbc>
				}else{
					cursorPos++;
     aa2:	01 96       	adiw	r24, 0x01	; 1
     aa4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <cursorPos+0x1>
     aa8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <cursorPos>
				}
				displaycase = 4;
     aac:	f0 92 08 01 	sts	0x0108, r15	; 0x800108 <displaycase>
				redrawMenu();
     ab0:	0e 94 e7 03 	call	0x7ce	; 0x7ce <redrawMenu>
				break;
     ab4:	dc cf       	rjmp	.-72     	; 0xa6e <main+0x7e>
			case 2: // we go up
				if (cursorPos == 1){
     ab6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <cursorPos>
     aba:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <cursorPos+0x1>
     abe:	81 30       	cpi	r24, 0x01	; 1
     ac0:	91 05       	cpc	r25, r1
     ac2:	29 f4       	brne	.+10     	; 0xace <main+0xde>
					cursorPos = 3;
     ac4:	d0 93 0b 01 	sts	0x010B, r29	; 0x80010b <cursorPos+0x1>
     ac8:	c0 93 0a 01 	sts	0x010A, r28	; 0x80010a <cursorPos>
     acc:	05 c0       	rjmp	.+10     	; 0xad8 <main+0xe8>
				}else{
					cursorPos--;
     ace:	01 97       	sbiw	r24, 0x01	; 1
     ad0:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <cursorPos+0x1>
     ad4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <cursorPos>
				}
				displaycase = 4;
     ad8:	f0 92 08 01 	sts	0x0108, r15	; 0x800108 <displaycase>
				redrawMenu();
     adc:	0e 94 e7 03 	call	0x7ce	; 0x7ce <redrawMenu>
				break;
     ae0:	c6 cf       	rjmp	.-116    	; 0xa6e <main+0x7e>
		    case 3: // select
				if (isInMenu){ // is we are in menu
     ae2:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <isInMenu>
     ae6:	88 23       	and	r24, r24
     ae8:	89 f1       	breq	.+98     	; 0xb4c <main+0x15c>
					if (cursorPos == 1){ // if position 1 
     aea:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <cursorPos>
     aee:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <cursorPos+0x1>
     af2:	81 30       	cpi	r24, 0x01	; 1
     af4:	91 05       	cpc	r25, r1
     af6:	81 f4       	brne	.+32     	; 0xb18 <main+0x128>
						isInMenu = 0;
     af8:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <isInMenu>
						displaycase = 0;
     afc:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <displaycase>
						while(lumRun){ // run luminosity check
     b00:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <__data_end>
     b04:	88 23       	and	r24, r24
     b06:	09 f4       	brne	.+2      	; 0xb0a <main+0x11a>
     b08:	b2 cf       	rjmp	.-156    	; 0xa6e <main+0x7e>
							luminosity();
     b0a:	0e 94 4e 04 	call	0x89c	; 0x89c <luminosity>
		    case 3: // select
				if (isInMenu){ // is we are in menu
					if (cursorPos == 1){ // if position 1 
						isInMenu = 0;
						displaycase = 0;
						while(lumRun){ // run luminosity check
     b0e:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <__data_end>
     b12:	81 11       	cpse	r24, r1
     b14:	fa cf       	rjmp	.-12     	; 0xb0a <main+0x11a>
     b16:	ab cf       	rjmp	.-170    	; 0xa6e <main+0x7e>
							luminosity();
						}
						}else if (cursorPos == 2){ // display about section
     b18:	82 30       	cpi	r24, 0x02	; 2
     b1a:	91 05       	cpc	r25, r1
     b1c:	49 f4       	brne	.+18     	; 0xb30 <main+0x140>
						isInMenu = 0;
     b1e:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <isInMenu>
						displaycase = 0;
     b22:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <displaycase>
						about();
     b26:	0e 94 2b 04 	call	0x856	; 0x856 <about>
						LCD_update();
     b2a:	0e 94 cb 03 	call	0x796	; 0x796 <LCD_update>
     b2e:	9f cf       	rjmp	.-194    	; 0xa6e <main+0x7e>
						}else if (cursorPos == 3){ // display Saxion logo
     b30:	03 97       	sbiw	r24, 0x03	; 3
     b32:	09 f0       	breq	.+2      	; 0xb36 <main+0x146>
     b34:	9c cf       	rjmp	.-200    	; 0xa6e <main+0x7e>
						isInMenu = 0;
     b36:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <isInMenu>
						displaycase = 0;
     b3a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <displaycase>
						LCD_setBitmap(saxionLogo);
     b3e:	88 e6       	ldi	r24, 0x68	; 104
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_setBitmap>
						LCD_update();
     b46:	0e 94 cb 03 	call	0x796	; 0x796 <LCD_update>
     b4a:	91 cf       	rjmp	.-222    	; 0xa6e <main+0x7e>
					}
					}else{ // if we are not in menu return there
					LCD_clear(WHITE);
     b4c:	80 e0       	ldi	r24, 0x00	; 0
     b4e:	0e 94 bc 03 	call	0x778	; 0x778 <LCD_clear>
					isInMenu = 1;
     b52:	e0 92 09 01 	sts	0x0109, r14	; 0x800109 <isInMenu>
					displaycase = 4;
     b56:	f0 92 08 01 	sts	0x0108, r15	; 0x800108 <displaycase>
					redrawMenu();
     b5a:	0e 94 e7 03 	call	0x7ce	; 0x7ce <redrawMenu>
     b5e:	87 cf       	rjmp	.-242    	; 0xa6e <main+0x7e>
				}
				break;
			case 4: // idling
				redrawMenu();
     b60:	0e 94 e7 03 	call	0x7ce	; 0x7ce <redrawMenu>
				break;
     b64:	84 cf       	rjmp	.-248    	; 0xa6e <main+0x7e>

00000b66 <__vector_5>:
	LCD_writeString("LUX",18+6*4,8*2,1,BLACK);
	LCD_update();
	_delay_ms(250);
}

ISR (PCINT2_vect){ // interrupt handling
     b66:	1f 92       	push	r1
     b68:	0f 92       	push	r0
     b6a:	0f b6       	in	r0, 0x3f	; 63
     b6c:	0f 92       	push	r0
     b6e:	11 24       	eor	r1, r1
     b70:	2f 93       	push	r18
     b72:	8f 93       	push	r24
     b74:	9f 93       	push	r25
	if (PIND & (1<<4)){ // left button
     b76:	4c 9b       	sbis	0x09, 4	; 9
     b78:	0e c0       	rjmp	.+28     	; 0xb96 <__vector_5+0x30>
     b7a:	2f ef       	ldi	r18, 0xFF	; 255
     b7c:	86 e7       	ldi	r24, 0x76	; 118
     b7e:	91 e0       	ldi	r25, 0x01	; 1
     b80:	21 50       	subi	r18, 0x01	; 1
     b82:	80 40       	sbci	r24, 0x00	; 0
     b84:	90 40       	sbci	r25, 0x00	; 0
     b86:	e1 f7       	brne	.-8      	; 0xb80 <__vector_5+0x1a>
     b88:	00 c0       	rjmp	.+0      	; 0xb8a <__vector_5+0x24>
     b8a:	00 00       	nop
		_delay_ms(30); // debounce
		if (PIND & (1<<4)){ 
     b8c:	4c 9b       	sbis	0x09, 4	; 9
     b8e:	03 c0       	rjmp	.+6      	; 0xb96 <__vector_5+0x30>
			displaycase = 1;
     b90:	81 e0       	ldi	r24, 0x01	; 1
     b92:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <displaycase>
		}
	}	
	if (PIND & (1<<5)){ // middle button
     b96:	4d 9b       	sbis	0x09, 5	; 9
     b98:	15 c0       	rjmp	.+42     	; 0xbc4 <__vector_5+0x5e>
     b9a:	2f ef       	ldi	r18, 0xFF	; 255
     b9c:	86 e7       	ldi	r24, 0x76	; 118
     b9e:	91 e0       	ldi	r25, 0x01	; 1
     ba0:	21 50       	subi	r18, 0x01	; 1
     ba2:	80 40       	sbci	r24, 0x00	; 0
     ba4:	90 40       	sbci	r25, 0x00	; 0
     ba6:	e1 f7       	brne	.-8      	; 0xba0 <__vector_5+0x3a>
     ba8:	00 c0       	rjmp	.+0      	; 0xbaa <__vector_5+0x44>
     baa:	00 00       	nop
		_delay_ms(30); // debounce
		if (PIND & (1<<5)){ 
     bac:	4d 9b       	sbis	0x09, 5	; 9
     bae:	0a c0       	rjmp	.+20     	; 0xbc4 <__vector_5+0x5e>
			lumRun =! lumRun;
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <__data_end>
     bb6:	91 11       	cpse	r25, r1
     bb8:	80 e0       	ldi	r24, 0x00	; 0
     bba:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <__data_end>
			displaycase = 3;
     bbe:	83 e0       	ldi	r24, 0x03	; 3
     bc0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <displaycase>
		}
	}
	if (PIND & (1<<6)){ // right button
     bc4:	4e 9b       	sbis	0x09, 6	; 9
     bc6:	0e c0       	rjmp	.+28     	; 0xbe4 <__vector_5+0x7e>
     bc8:	2f ef       	ldi	r18, 0xFF	; 255
     bca:	86 e7       	ldi	r24, 0x76	; 118
     bcc:	91 e0       	ldi	r25, 0x01	; 1
     bce:	21 50       	subi	r18, 0x01	; 1
     bd0:	80 40       	sbci	r24, 0x00	; 0
     bd2:	90 40       	sbci	r25, 0x00	; 0
     bd4:	e1 f7       	brne	.-8      	; 0xbce <__vector_5+0x68>
     bd6:	00 c0       	rjmp	.+0      	; 0xbd8 <__vector_5+0x72>
     bd8:	00 00       	nop
		_delay_ms(30); // debounce
		if (PIND & (1<<6)){
     bda:	4e 9b       	sbis	0x09, 6	; 9
     bdc:	03 c0       	rjmp	.+6      	; 0xbe4 <__vector_5+0x7e>
			displaycase = 2;
     bde:	82 e0       	ldi	r24, 0x02	; 2
     be0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <displaycase>
		}
	}
}
     be4:	9f 91       	pop	r25
     be6:	8f 91       	pop	r24
     be8:	2f 91       	pop	r18
     bea:	0f 90       	pop	r0
     bec:	0f be       	out	0x3f, r0	; 63
     bee:	0f 90       	pop	r0
     bf0:	1f 90       	pop	r1
     bf2:	18 95       	reti

00000bf4 <__subsf3>:
     bf4:	50 58       	subi	r21, 0x80	; 128

00000bf6 <__addsf3>:
     bf6:	bb 27       	eor	r27, r27
     bf8:	aa 27       	eor	r26, r26
     bfa:	0e 94 12 06 	call	0xc24	; 0xc24 <__addsf3x>
     bfe:	0c 94 a3 07 	jmp	0xf46	; 0xf46 <__fp_round>
     c02:	0e 94 95 07 	call	0xf2a	; 0xf2a <__fp_pscA>
     c06:	38 f0       	brcs	.+14     	; 0xc16 <__addsf3+0x20>
     c08:	0e 94 9c 07 	call	0xf38	; 0xf38 <__fp_pscB>
     c0c:	20 f0       	brcs	.+8      	; 0xc16 <__addsf3+0x20>
     c0e:	39 f4       	brne	.+14     	; 0xc1e <__addsf3+0x28>
     c10:	9f 3f       	cpi	r25, 0xFF	; 255
     c12:	19 f4       	brne	.+6      	; 0xc1a <__addsf3+0x24>
     c14:	26 f4       	brtc	.+8      	; 0xc1e <__addsf3+0x28>
     c16:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__fp_nan>
     c1a:	0e f4       	brtc	.+2      	; 0xc1e <__addsf3+0x28>
     c1c:	e0 95       	com	r30
     c1e:	e7 fb       	bst	r30, 7
     c20:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__fp_inf>

00000c24 <__addsf3x>:
     c24:	e9 2f       	mov	r30, r25
     c26:	0e 94 b4 07 	call	0xf68	; 0xf68 <__fp_split3>
     c2a:	58 f3       	brcs	.-42     	; 0xc02 <__addsf3+0xc>
     c2c:	ba 17       	cp	r27, r26
     c2e:	62 07       	cpc	r22, r18
     c30:	73 07       	cpc	r23, r19
     c32:	84 07       	cpc	r24, r20
     c34:	95 07       	cpc	r25, r21
     c36:	20 f0       	brcs	.+8      	; 0xc40 <__addsf3x+0x1c>
     c38:	79 f4       	brne	.+30     	; 0xc58 <__addsf3x+0x34>
     c3a:	a6 f5       	brtc	.+104    	; 0xca4 <__addsf3x+0x80>
     c3c:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__fp_zero>
     c40:	0e f4       	brtc	.+2      	; 0xc44 <__addsf3x+0x20>
     c42:	e0 95       	com	r30
     c44:	0b 2e       	mov	r0, r27
     c46:	ba 2f       	mov	r27, r26
     c48:	a0 2d       	mov	r26, r0
     c4a:	0b 01       	movw	r0, r22
     c4c:	b9 01       	movw	r22, r18
     c4e:	90 01       	movw	r18, r0
     c50:	0c 01       	movw	r0, r24
     c52:	ca 01       	movw	r24, r20
     c54:	a0 01       	movw	r20, r0
     c56:	11 24       	eor	r1, r1
     c58:	ff 27       	eor	r31, r31
     c5a:	59 1b       	sub	r21, r25
     c5c:	99 f0       	breq	.+38     	; 0xc84 <__addsf3x+0x60>
     c5e:	59 3f       	cpi	r21, 0xF9	; 249
     c60:	50 f4       	brcc	.+20     	; 0xc76 <__addsf3x+0x52>
     c62:	50 3e       	cpi	r21, 0xE0	; 224
     c64:	68 f1       	brcs	.+90     	; 0xcc0 <__addsf3x+0x9c>
     c66:	1a 16       	cp	r1, r26
     c68:	f0 40       	sbci	r31, 0x00	; 0
     c6a:	a2 2f       	mov	r26, r18
     c6c:	23 2f       	mov	r18, r19
     c6e:	34 2f       	mov	r19, r20
     c70:	44 27       	eor	r20, r20
     c72:	58 5f       	subi	r21, 0xF8	; 248
     c74:	f3 cf       	rjmp	.-26     	; 0xc5c <__addsf3x+0x38>
     c76:	46 95       	lsr	r20
     c78:	37 95       	ror	r19
     c7a:	27 95       	ror	r18
     c7c:	a7 95       	ror	r26
     c7e:	f0 40       	sbci	r31, 0x00	; 0
     c80:	53 95       	inc	r21
     c82:	c9 f7       	brne	.-14     	; 0xc76 <__addsf3x+0x52>
     c84:	7e f4       	brtc	.+30     	; 0xca4 <__addsf3x+0x80>
     c86:	1f 16       	cp	r1, r31
     c88:	ba 0b       	sbc	r27, r26
     c8a:	62 0b       	sbc	r22, r18
     c8c:	73 0b       	sbc	r23, r19
     c8e:	84 0b       	sbc	r24, r20
     c90:	ba f0       	brmi	.+46     	; 0xcc0 <__addsf3x+0x9c>
     c92:	91 50       	subi	r25, 0x01	; 1
     c94:	a1 f0       	breq	.+40     	; 0xcbe <__addsf3x+0x9a>
     c96:	ff 0f       	add	r31, r31
     c98:	bb 1f       	adc	r27, r27
     c9a:	66 1f       	adc	r22, r22
     c9c:	77 1f       	adc	r23, r23
     c9e:	88 1f       	adc	r24, r24
     ca0:	c2 f7       	brpl	.-16     	; 0xc92 <__addsf3x+0x6e>
     ca2:	0e c0       	rjmp	.+28     	; 0xcc0 <__addsf3x+0x9c>
     ca4:	ba 0f       	add	r27, r26
     ca6:	62 1f       	adc	r22, r18
     ca8:	73 1f       	adc	r23, r19
     caa:	84 1f       	adc	r24, r20
     cac:	48 f4       	brcc	.+18     	; 0xcc0 <__addsf3x+0x9c>
     cae:	87 95       	ror	r24
     cb0:	77 95       	ror	r23
     cb2:	67 95       	ror	r22
     cb4:	b7 95       	ror	r27
     cb6:	f7 95       	ror	r31
     cb8:	9e 3f       	cpi	r25, 0xFE	; 254
     cba:	08 f0       	brcs	.+2      	; 0xcbe <__addsf3x+0x9a>
     cbc:	b0 cf       	rjmp	.-160    	; 0xc1e <__addsf3+0x28>
     cbe:	93 95       	inc	r25
     cc0:	88 0f       	add	r24, r24
     cc2:	08 f0       	brcs	.+2      	; 0xcc6 <__addsf3x+0xa2>
     cc4:	99 27       	eor	r25, r25
     cc6:	ee 0f       	add	r30, r30
     cc8:	97 95       	ror	r25
     cca:	87 95       	ror	r24
     ccc:	08 95       	ret

00000cce <__divsf3>:
     cce:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <__divsf3x>
     cd2:	0c 94 a3 07 	jmp	0xf46	; 0xf46 <__fp_round>
     cd6:	0e 94 9c 07 	call	0xf38	; 0xf38 <__fp_pscB>
     cda:	58 f0       	brcs	.+22     	; 0xcf2 <__divsf3+0x24>
     cdc:	0e 94 95 07 	call	0xf2a	; 0xf2a <__fp_pscA>
     ce0:	40 f0       	brcs	.+16     	; 0xcf2 <__divsf3+0x24>
     ce2:	29 f4       	brne	.+10     	; 0xcee <__divsf3+0x20>
     ce4:	5f 3f       	cpi	r21, 0xFF	; 255
     ce6:	29 f0       	breq	.+10     	; 0xcf2 <__divsf3+0x24>
     ce8:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__fp_inf>
     cec:	51 11       	cpse	r21, r1
     cee:	0c 94 ef 07 	jmp	0xfde	; 0xfde <__fp_szero>
     cf2:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__fp_nan>

00000cf6 <__divsf3x>:
     cf6:	0e 94 b4 07 	call	0xf68	; 0xf68 <__fp_split3>
     cfa:	68 f3       	brcs	.-38     	; 0xcd6 <__divsf3+0x8>

00000cfc <__divsf3_pse>:
     cfc:	99 23       	and	r25, r25
     cfe:	b1 f3       	breq	.-20     	; 0xcec <__divsf3+0x1e>
     d00:	55 23       	and	r21, r21
     d02:	91 f3       	breq	.-28     	; 0xce8 <__divsf3+0x1a>
     d04:	95 1b       	sub	r25, r21
     d06:	55 0b       	sbc	r21, r21
     d08:	bb 27       	eor	r27, r27
     d0a:	aa 27       	eor	r26, r26
     d0c:	62 17       	cp	r22, r18
     d0e:	73 07       	cpc	r23, r19
     d10:	84 07       	cpc	r24, r20
     d12:	38 f0       	brcs	.+14     	; 0xd22 <__divsf3_pse+0x26>
     d14:	9f 5f       	subi	r25, 0xFF	; 255
     d16:	5f 4f       	sbci	r21, 0xFF	; 255
     d18:	22 0f       	add	r18, r18
     d1a:	33 1f       	adc	r19, r19
     d1c:	44 1f       	adc	r20, r20
     d1e:	aa 1f       	adc	r26, r26
     d20:	a9 f3       	breq	.-22     	; 0xd0c <__divsf3_pse+0x10>
     d22:	35 d0       	rcall	.+106    	; 0xd8e <__divsf3_pse+0x92>
     d24:	0e 2e       	mov	r0, r30
     d26:	3a f0       	brmi	.+14     	; 0xd36 <__divsf3_pse+0x3a>
     d28:	e0 e8       	ldi	r30, 0x80	; 128
     d2a:	32 d0       	rcall	.+100    	; 0xd90 <__divsf3_pse+0x94>
     d2c:	91 50       	subi	r25, 0x01	; 1
     d2e:	50 40       	sbci	r21, 0x00	; 0
     d30:	e6 95       	lsr	r30
     d32:	00 1c       	adc	r0, r0
     d34:	ca f7       	brpl	.-14     	; 0xd28 <__divsf3_pse+0x2c>
     d36:	2b d0       	rcall	.+86     	; 0xd8e <__divsf3_pse+0x92>
     d38:	fe 2f       	mov	r31, r30
     d3a:	29 d0       	rcall	.+82     	; 0xd8e <__divsf3_pse+0x92>
     d3c:	66 0f       	add	r22, r22
     d3e:	77 1f       	adc	r23, r23
     d40:	88 1f       	adc	r24, r24
     d42:	bb 1f       	adc	r27, r27
     d44:	26 17       	cp	r18, r22
     d46:	37 07       	cpc	r19, r23
     d48:	48 07       	cpc	r20, r24
     d4a:	ab 07       	cpc	r26, r27
     d4c:	b0 e8       	ldi	r27, 0x80	; 128
     d4e:	09 f0       	breq	.+2      	; 0xd52 <__divsf3_pse+0x56>
     d50:	bb 0b       	sbc	r27, r27
     d52:	80 2d       	mov	r24, r0
     d54:	bf 01       	movw	r22, r30
     d56:	ff 27       	eor	r31, r31
     d58:	93 58       	subi	r25, 0x83	; 131
     d5a:	5f 4f       	sbci	r21, 0xFF	; 255
     d5c:	3a f0       	brmi	.+14     	; 0xd6c <__divsf3_pse+0x70>
     d5e:	9e 3f       	cpi	r25, 0xFE	; 254
     d60:	51 05       	cpc	r21, r1
     d62:	78 f0       	brcs	.+30     	; 0xd82 <__divsf3_pse+0x86>
     d64:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__fp_inf>
     d68:	0c 94 ef 07 	jmp	0xfde	; 0xfde <__fp_szero>
     d6c:	5f 3f       	cpi	r21, 0xFF	; 255
     d6e:	e4 f3       	brlt	.-8      	; 0xd68 <__divsf3_pse+0x6c>
     d70:	98 3e       	cpi	r25, 0xE8	; 232
     d72:	d4 f3       	brlt	.-12     	; 0xd68 <__divsf3_pse+0x6c>
     d74:	86 95       	lsr	r24
     d76:	77 95       	ror	r23
     d78:	67 95       	ror	r22
     d7a:	b7 95       	ror	r27
     d7c:	f7 95       	ror	r31
     d7e:	9f 5f       	subi	r25, 0xFF	; 255
     d80:	c9 f7       	brne	.-14     	; 0xd74 <__divsf3_pse+0x78>
     d82:	88 0f       	add	r24, r24
     d84:	91 1d       	adc	r25, r1
     d86:	96 95       	lsr	r25
     d88:	87 95       	ror	r24
     d8a:	97 f9       	bld	r25, 7
     d8c:	08 95       	ret
     d8e:	e1 e0       	ldi	r30, 0x01	; 1
     d90:	66 0f       	add	r22, r22
     d92:	77 1f       	adc	r23, r23
     d94:	88 1f       	adc	r24, r24
     d96:	bb 1f       	adc	r27, r27
     d98:	62 17       	cp	r22, r18
     d9a:	73 07       	cpc	r23, r19
     d9c:	84 07       	cpc	r24, r20
     d9e:	ba 07       	cpc	r27, r26
     da0:	20 f0       	brcs	.+8      	; 0xdaa <__divsf3_pse+0xae>
     da2:	62 1b       	sub	r22, r18
     da4:	73 0b       	sbc	r23, r19
     da6:	84 0b       	sbc	r24, r20
     da8:	ba 0b       	sbc	r27, r26
     daa:	ee 1f       	adc	r30, r30
     dac:	88 f7       	brcc	.-30     	; 0xd90 <__divsf3_pse+0x94>
     dae:	e0 95       	com	r30
     db0:	08 95       	ret

00000db2 <__fixsfsi>:
     db2:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__fixunssfsi>
     db6:	68 94       	set
     db8:	b1 11       	cpse	r27, r1
     dba:	0c 94 ef 07 	jmp	0xfde	; 0xfde <__fp_szero>
     dbe:	08 95       	ret

00000dc0 <__fixunssfsi>:
     dc0:	0e 94 bc 07 	call	0xf78	; 0xf78 <__fp_splitA>
     dc4:	88 f0       	brcs	.+34     	; 0xde8 <__fixunssfsi+0x28>
     dc6:	9f 57       	subi	r25, 0x7F	; 127
     dc8:	98 f0       	brcs	.+38     	; 0xdf0 <__fixunssfsi+0x30>
     dca:	b9 2f       	mov	r27, r25
     dcc:	99 27       	eor	r25, r25
     dce:	b7 51       	subi	r27, 0x17	; 23
     dd0:	b0 f0       	brcs	.+44     	; 0xdfe <__fixunssfsi+0x3e>
     dd2:	e1 f0       	breq	.+56     	; 0xe0c <__fixunssfsi+0x4c>
     dd4:	66 0f       	add	r22, r22
     dd6:	77 1f       	adc	r23, r23
     dd8:	88 1f       	adc	r24, r24
     dda:	99 1f       	adc	r25, r25
     ddc:	1a f0       	brmi	.+6      	; 0xde4 <__fixunssfsi+0x24>
     dde:	ba 95       	dec	r27
     de0:	c9 f7       	brne	.-14     	; 0xdd4 <__fixunssfsi+0x14>
     de2:	14 c0       	rjmp	.+40     	; 0xe0c <__fixunssfsi+0x4c>
     de4:	b1 30       	cpi	r27, 0x01	; 1
     de6:	91 f0       	breq	.+36     	; 0xe0c <__fixunssfsi+0x4c>
     de8:	0e 94 ee 07 	call	0xfdc	; 0xfdc <__fp_zero>
     dec:	b1 e0       	ldi	r27, 0x01	; 1
     dee:	08 95       	ret
     df0:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__fp_zero>
     df4:	67 2f       	mov	r22, r23
     df6:	78 2f       	mov	r23, r24
     df8:	88 27       	eor	r24, r24
     dfa:	b8 5f       	subi	r27, 0xF8	; 248
     dfc:	39 f0       	breq	.+14     	; 0xe0c <__fixunssfsi+0x4c>
     dfe:	b9 3f       	cpi	r27, 0xF9	; 249
     e00:	cc f3       	brlt	.-14     	; 0xdf4 <__fixunssfsi+0x34>
     e02:	86 95       	lsr	r24
     e04:	77 95       	ror	r23
     e06:	67 95       	ror	r22
     e08:	b3 95       	inc	r27
     e0a:	d9 f7       	brne	.-10     	; 0xe02 <__fixunssfsi+0x42>
     e0c:	3e f4       	brtc	.+14     	; 0xe1c <__fixunssfsi+0x5c>
     e0e:	90 95       	com	r25
     e10:	80 95       	com	r24
     e12:	70 95       	com	r23
     e14:	61 95       	neg	r22
     e16:	7f 4f       	sbci	r23, 0xFF	; 255
     e18:	8f 4f       	sbci	r24, 0xFF	; 255
     e1a:	9f 4f       	sbci	r25, 0xFF	; 255
     e1c:	08 95       	ret

00000e1e <__floatunsisf>:
     e1e:	e8 94       	clt
     e20:	09 c0       	rjmp	.+18     	; 0xe34 <__floatsisf+0x12>

00000e22 <__floatsisf>:
     e22:	97 fb       	bst	r25, 7
     e24:	3e f4       	brtc	.+14     	; 0xe34 <__floatsisf+0x12>
     e26:	90 95       	com	r25
     e28:	80 95       	com	r24
     e2a:	70 95       	com	r23
     e2c:	61 95       	neg	r22
     e2e:	7f 4f       	sbci	r23, 0xFF	; 255
     e30:	8f 4f       	sbci	r24, 0xFF	; 255
     e32:	9f 4f       	sbci	r25, 0xFF	; 255
     e34:	99 23       	and	r25, r25
     e36:	a9 f0       	breq	.+42     	; 0xe62 <__floatsisf+0x40>
     e38:	f9 2f       	mov	r31, r25
     e3a:	96 e9       	ldi	r25, 0x96	; 150
     e3c:	bb 27       	eor	r27, r27
     e3e:	93 95       	inc	r25
     e40:	f6 95       	lsr	r31
     e42:	87 95       	ror	r24
     e44:	77 95       	ror	r23
     e46:	67 95       	ror	r22
     e48:	b7 95       	ror	r27
     e4a:	f1 11       	cpse	r31, r1
     e4c:	f8 cf       	rjmp	.-16     	; 0xe3e <__floatsisf+0x1c>
     e4e:	fa f4       	brpl	.+62     	; 0xe8e <__floatsisf+0x6c>
     e50:	bb 0f       	add	r27, r27
     e52:	11 f4       	brne	.+4      	; 0xe58 <__floatsisf+0x36>
     e54:	60 ff       	sbrs	r22, 0
     e56:	1b c0       	rjmp	.+54     	; 0xe8e <__floatsisf+0x6c>
     e58:	6f 5f       	subi	r22, 0xFF	; 255
     e5a:	7f 4f       	sbci	r23, 0xFF	; 255
     e5c:	8f 4f       	sbci	r24, 0xFF	; 255
     e5e:	9f 4f       	sbci	r25, 0xFF	; 255
     e60:	16 c0       	rjmp	.+44     	; 0xe8e <__floatsisf+0x6c>
     e62:	88 23       	and	r24, r24
     e64:	11 f0       	breq	.+4      	; 0xe6a <__floatsisf+0x48>
     e66:	96 e9       	ldi	r25, 0x96	; 150
     e68:	11 c0       	rjmp	.+34     	; 0xe8c <__floatsisf+0x6a>
     e6a:	77 23       	and	r23, r23
     e6c:	21 f0       	breq	.+8      	; 0xe76 <__floatsisf+0x54>
     e6e:	9e e8       	ldi	r25, 0x8E	; 142
     e70:	87 2f       	mov	r24, r23
     e72:	76 2f       	mov	r23, r22
     e74:	05 c0       	rjmp	.+10     	; 0xe80 <__floatsisf+0x5e>
     e76:	66 23       	and	r22, r22
     e78:	71 f0       	breq	.+28     	; 0xe96 <__floatsisf+0x74>
     e7a:	96 e8       	ldi	r25, 0x86	; 134
     e7c:	86 2f       	mov	r24, r22
     e7e:	70 e0       	ldi	r23, 0x00	; 0
     e80:	60 e0       	ldi	r22, 0x00	; 0
     e82:	2a f0       	brmi	.+10     	; 0xe8e <__floatsisf+0x6c>
     e84:	9a 95       	dec	r25
     e86:	66 0f       	add	r22, r22
     e88:	77 1f       	adc	r23, r23
     e8a:	88 1f       	adc	r24, r24
     e8c:	da f7       	brpl	.-10     	; 0xe84 <__floatsisf+0x62>
     e8e:	88 0f       	add	r24, r24
     e90:	96 95       	lsr	r25
     e92:	87 95       	ror	r24
     e94:	97 f9       	bld	r25, 7
     e96:	08 95       	ret

00000e98 <floor>:
     e98:	0e 94 d6 07 	call	0xfac	; 0xfac <__fp_trunc>
     e9c:	90 f0       	brcs	.+36     	; 0xec2 <floor+0x2a>
     e9e:	9f 37       	cpi	r25, 0x7F	; 127
     ea0:	48 f4       	brcc	.+18     	; 0xeb4 <floor+0x1c>
     ea2:	91 11       	cpse	r25, r1
     ea4:	16 f0       	brts	.+4      	; 0xeaa <floor+0x12>
     ea6:	0c 94 ef 07 	jmp	0xfde	; 0xfde <__fp_szero>
     eaa:	60 e0       	ldi	r22, 0x00	; 0
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	80 e8       	ldi	r24, 0x80	; 128
     eb0:	9f eb       	ldi	r25, 0xBF	; 191
     eb2:	08 95       	ret
     eb4:	26 f4       	brtc	.+8      	; 0xebe <floor+0x26>
     eb6:	1b 16       	cp	r1, r27
     eb8:	61 1d       	adc	r22, r1
     eba:	71 1d       	adc	r23, r1
     ebc:	81 1d       	adc	r24, r1
     ebe:	0c 94 69 07 	jmp	0xed2	; 0xed2 <__fp_mintl>
     ec2:	0c 94 84 07 	jmp	0xf08	; 0xf08 <__fp_mpack>

00000ec6 <__fp_inf>:
     ec6:	97 f9       	bld	r25, 7
     ec8:	9f 67       	ori	r25, 0x7F	; 127
     eca:	80 e8       	ldi	r24, 0x80	; 128
     ecc:	70 e0       	ldi	r23, 0x00	; 0
     ece:	60 e0       	ldi	r22, 0x00	; 0
     ed0:	08 95       	ret

00000ed2 <__fp_mintl>:
     ed2:	88 23       	and	r24, r24
     ed4:	71 f4       	brne	.+28     	; 0xef2 <__fp_mintl+0x20>
     ed6:	77 23       	and	r23, r23
     ed8:	21 f0       	breq	.+8      	; 0xee2 <__fp_mintl+0x10>
     eda:	98 50       	subi	r25, 0x08	; 8
     edc:	87 2b       	or	r24, r23
     ede:	76 2f       	mov	r23, r22
     ee0:	07 c0       	rjmp	.+14     	; 0xef0 <__fp_mintl+0x1e>
     ee2:	66 23       	and	r22, r22
     ee4:	11 f4       	brne	.+4      	; 0xeea <__fp_mintl+0x18>
     ee6:	99 27       	eor	r25, r25
     ee8:	0d c0       	rjmp	.+26     	; 0xf04 <__fp_mintl+0x32>
     eea:	90 51       	subi	r25, 0x10	; 16
     eec:	86 2b       	or	r24, r22
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	60 e0       	ldi	r22, 0x00	; 0
     ef2:	2a f0       	brmi	.+10     	; 0xefe <__fp_mintl+0x2c>
     ef4:	9a 95       	dec	r25
     ef6:	66 0f       	add	r22, r22
     ef8:	77 1f       	adc	r23, r23
     efa:	88 1f       	adc	r24, r24
     efc:	da f7       	brpl	.-10     	; 0xef4 <__fp_mintl+0x22>
     efe:	88 0f       	add	r24, r24
     f00:	96 95       	lsr	r25
     f02:	87 95       	ror	r24
     f04:	97 f9       	bld	r25, 7
     f06:	08 95       	ret

00000f08 <__fp_mpack>:
     f08:	9f 3f       	cpi	r25, 0xFF	; 255
     f0a:	31 f0       	breq	.+12     	; 0xf18 <__fp_mpack_finite+0xc>

00000f0c <__fp_mpack_finite>:
     f0c:	91 50       	subi	r25, 0x01	; 1
     f0e:	20 f4       	brcc	.+8      	; 0xf18 <__fp_mpack_finite+0xc>
     f10:	87 95       	ror	r24
     f12:	77 95       	ror	r23
     f14:	67 95       	ror	r22
     f16:	b7 95       	ror	r27
     f18:	88 0f       	add	r24, r24
     f1a:	91 1d       	adc	r25, r1
     f1c:	96 95       	lsr	r25
     f1e:	87 95       	ror	r24
     f20:	97 f9       	bld	r25, 7
     f22:	08 95       	ret

00000f24 <__fp_nan>:
     f24:	9f ef       	ldi	r25, 0xFF	; 255
     f26:	80 ec       	ldi	r24, 0xC0	; 192
     f28:	08 95       	ret

00000f2a <__fp_pscA>:
     f2a:	00 24       	eor	r0, r0
     f2c:	0a 94       	dec	r0
     f2e:	16 16       	cp	r1, r22
     f30:	17 06       	cpc	r1, r23
     f32:	18 06       	cpc	r1, r24
     f34:	09 06       	cpc	r0, r25
     f36:	08 95       	ret

00000f38 <__fp_pscB>:
     f38:	00 24       	eor	r0, r0
     f3a:	0a 94       	dec	r0
     f3c:	12 16       	cp	r1, r18
     f3e:	13 06       	cpc	r1, r19
     f40:	14 06       	cpc	r1, r20
     f42:	05 06       	cpc	r0, r21
     f44:	08 95       	ret

00000f46 <__fp_round>:
     f46:	09 2e       	mov	r0, r25
     f48:	03 94       	inc	r0
     f4a:	00 0c       	add	r0, r0
     f4c:	11 f4       	brne	.+4      	; 0xf52 <__fp_round+0xc>
     f4e:	88 23       	and	r24, r24
     f50:	52 f0       	brmi	.+20     	; 0xf66 <__fp_round+0x20>
     f52:	bb 0f       	add	r27, r27
     f54:	40 f4       	brcc	.+16     	; 0xf66 <__fp_round+0x20>
     f56:	bf 2b       	or	r27, r31
     f58:	11 f4       	brne	.+4      	; 0xf5e <__fp_round+0x18>
     f5a:	60 ff       	sbrs	r22, 0
     f5c:	04 c0       	rjmp	.+8      	; 0xf66 <__fp_round+0x20>
     f5e:	6f 5f       	subi	r22, 0xFF	; 255
     f60:	7f 4f       	sbci	r23, 0xFF	; 255
     f62:	8f 4f       	sbci	r24, 0xFF	; 255
     f64:	9f 4f       	sbci	r25, 0xFF	; 255
     f66:	08 95       	ret

00000f68 <__fp_split3>:
     f68:	57 fd       	sbrc	r21, 7
     f6a:	90 58       	subi	r25, 0x80	; 128
     f6c:	44 0f       	add	r20, r20
     f6e:	55 1f       	adc	r21, r21
     f70:	59 f0       	breq	.+22     	; 0xf88 <__fp_splitA+0x10>
     f72:	5f 3f       	cpi	r21, 0xFF	; 255
     f74:	71 f0       	breq	.+28     	; 0xf92 <__fp_splitA+0x1a>
     f76:	47 95       	ror	r20

00000f78 <__fp_splitA>:
     f78:	88 0f       	add	r24, r24
     f7a:	97 fb       	bst	r25, 7
     f7c:	99 1f       	adc	r25, r25
     f7e:	61 f0       	breq	.+24     	; 0xf98 <__fp_splitA+0x20>
     f80:	9f 3f       	cpi	r25, 0xFF	; 255
     f82:	79 f0       	breq	.+30     	; 0xfa2 <__fp_splitA+0x2a>
     f84:	87 95       	ror	r24
     f86:	08 95       	ret
     f88:	12 16       	cp	r1, r18
     f8a:	13 06       	cpc	r1, r19
     f8c:	14 06       	cpc	r1, r20
     f8e:	55 1f       	adc	r21, r21
     f90:	f2 cf       	rjmp	.-28     	; 0xf76 <__fp_split3+0xe>
     f92:	46 95       	lsr	r20
     f94:	f1 df       	rcall	.-30     	; 0xf78 <__fp_splitA>
     f96:	08 c0       	rjmp	.+16     	; 0xfa8 <__fp_splitA+0x30>
     f98:	16 16       	cp	r1, r22
     f9a:	17 06       	cpc	r1, r23
     f9c:	18 06       	cpc	r1, r24
     f9e:	99 1f       	adc	r25, r25
     fa0:	f1 cf       	rjmp	.-30     	; 0xf84 <__fp_splitA+0xc>
     fa2:	86 95       	lsr	r24
     fa4:	71 05       	cpc	r23, r1
     fa6:	61 05       	cpc	r22, r1
     fa8:	08 94       	sec
     faa:	08 95       	ret

00000fac <__fp_trunc>:
     fac:	0e 94 bc 07 	call	0xf78	; 0xf78 <__fp_splitA>
     fb0:	a0 f0       	brcs	.+40     	; 0xfda <__fp_trunc+0x2e>
     fb2:	be e7       	ldi	r27, 0x7E	; 126
     fb4:	b9 17       	cp	r27, r25
     fb6:	88 f4       	brcc	.+34     	; 0xfda <__fp_trunc+0x2e>
     fb8:	bb 27       	eor	r27, r27
     fba:	9f 38       	cpi	r25, 0x8F	; 143
     fbc:	60 f4       	brcc	.+24     	; 0xfd6 <__fp_trunc+0x2a>
     fbe:	16 16       	cp	r1, r22
     fc0:	b1 1d       	adc	r27, r1
     fc2:	67 2f       	mov	r22, r23
     fc4:	78 2f       	mov	r23, r24
     fc6:	88 27       	eor	r24, r24
     fc8:	98 5f       	subi	r25, 0xF8	; 248
     fca:	f7 cf       	rjmp	.-18     	; 0xfba <__fp_trunc+0xe>
     fcc:	86 95       	lsr	r24
     fce:	77 95       	ror	r23
     fd0:	67 95       	ror	r22
     fd2:	b1 1d       	adc	r27, r1
     fd4:	93 95       	inc	r25
     fd6:	96 39       	cpi	r25, 0x96	; 150
     fd8:	c8 f3       	brcs	.-14     	; 0xfcc <__fp_trunc+0x20>
     fda:	08 95       	ret

00000fdc <__fp_zero>:
     fdc:	e8 94       	clt

00000fde <__fp_szero>:
     fde:	bb 27       	eor	r27, r27
     fe0:	66 27       	eor	r22, r22
     fe2:	77 27       	eor	r23, r23
     fe4:	cb 01       	movw	r24, r22
     fe6:	97 f9       	bld	r25, 7
     fe8:	08 95       	ret

00000fea <__mulsf3>:
     fea:	0e 94 08 08 	call	0x1010	; 0x1010 <__mulsf3x>
     fee:	0c 94 a3 07 	jmp	0xf46	; 0xf46 <__fp_round>
     ff2:	0e 94 95 07 	call	0xf2a	; 0xf2a <__fp_pscA>
     ff6:	38 f0       	brcs	.+14     	; 0x1006 <__mulsf3+0x1c>
     ff8:	0e 94 9c 07 	call	0xf38	; 0xf38 <__fp_pscB>
     ffc:	20 f0       	brcs	.+8      	; 0x1006 <__mulsf3+0x1c>
     ffe:	95 23       	and	r25, r21
    1000:	11 f0       	breq	.+4      	; 0x1006 <__mulsf3+0x1c>
    1002:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__fp_inf>
    1006:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__fp_nan>
    100a:	11 24       	eor	r1, r1
    100c:	0c 94 ef 07 	jmp	0xfde	; 0xfde <__fp_szero>

00001010 <__mulsf3x>:
    1010:	0e 94 b4 07 	call	0xf68	; 0xf68 <__fp_split3>
    1014:	70 f3       	brcs	.-36     	; 0xff2 <__mulsf3+0x8>

00001016 <__mulsf3_pse>:
    1016:	95 9f       	mul	r25, r21
    1018:	c1 f3       	breq	.-16     	; 0x100a <__mulsf3+0x20>
    101a:	95 0f       	add	r25, r21
    101c:	50 e0       	ldi	r21, 0x00	; 0
    101e:	55 1f       	adc	r21, r21
    1020:	62 9f       	mul	r22, r18
    1022:	f0 01       	movw	r30, r0
    1024:	72 9f       	mul	r23, r18
    1026:	bb 27       	eor	r27, r27
    1028:	f0 0d       	add	r31, r0
    102a:	b1 1d       	adc	r27, r1
    102c:	63 9f       	mul	r22, r19
    102e:	aa 27       	eor	r26, r26
    1030:	f0 0d       	add	r31, r0
    1032:	b1 1d       	adc	r27, r1
    1034:	aa 1f       	adc	r26, r26
    1036:	64 9f       	mul	r22, r20
    1038:	66 27       	eor	r22, r22
    103a:	b0 0d       	add	r27, r0
    103c:	a1 1d       	adc	r26, r1
    103e:	66 1f       	adc	r22, r22
    1040:	82 9f       	mul	r24, r18
    1042:	22 27       	eor	r18, r18
    1044:	b0 0d       	add	r27, r0
    1046:	a1 1d       	adc	r26, r1
    1048:	62 1f       	adc	r22, r18
    104a:	73 9f       	mul	r23, r19
    104c:	b0 0d       	add	r27, r0
    104e:	a1 1d       	adc	r26, r1
    1050:	62 1f       	adc	r22, r18
    1052:	83 9f       	mul	r24, r19
    1054:	a0 0d       	add	r26, r0
    1056:	61 1d       	adc	r22, r1
    1058:	22 1f       	adc	r18, r18
    105a:	74 9f       	mul	r23, r20
    105c:	33 27       	eor	r19, r19
    105e:	a0 0d       	add	r26, r0
    1060:	61 1d       	adc	r22, r1
    1062:	23 1f       	adc	r18, r19
    1064:	84 9f       	mul	r24, r20
    1066:	60 0d       	add	r22, r0
    1068:	21 1d       	adc	r18, r1
    106a:	82 2f       	mov	r24, r18
    106c:	76 2f       	mov	r23, r22
    106e:	6a 2f       	mov	r22, r26
    1070:	11 24       	eor	r1, r1
    1072:	9f 57       	subi	r25, 0x7F	; 127
    1074:	50 40       	sbci	r21, 0x00	; 0
    1076:	9a f0       	brmi	.+38     	; 0x109e <__mulsf3_pse+0x88>
    1078:	f1 f0       	breq	.+60     	; 0x10b6 <__mulsf3_pse+0xa0>
    107a:	88 23       	and	r24, r24
    107c:	4a f0       	brmi	.+18     	; 0x1090 <__mulsf3_pse+0x7a>
    107e:	ee 0f       	add	r30, r30
    1080:	ff 1f       	adc	r31, r31
    1082:	bb 1f       	adc	r27, r27
    1084:	66 1f       	adc	r22, r22
    1086:	77 1f       	adc	r23, r23
    1088:	88 1f       	adc	r24, r24
    108a:	91 50       	subi	r25, 0x01	; 1
    108c:	50 40       	sbci	r21, 0x00	; 0
    108e:	a9 f7       	brne	.-22     	; 0x107a <__mulsf3_pse+0x64>
    1090:	9e 3f       	cpi	r25, 0xFE	; 254
    1092:	51 05       	cpc	r21, r1
    1094:	80 f0       	brcs	.+32     	; 0x10b6 <__mulsf3_pse+0xa0>
    1096:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__fp_inf>
    109a:	0c 94 ef 07 	jmp	0xfde	; 0xfde <__fp_szero>
    109e:	5f 3f       	cpi	r21, 0xFF	; 255
    10a0:	e4 f3       	brlt	.-8      	; 0x109a <__mulsf3_pse+0x84>
    10a2:	98 3e       	cpi	r25, 0xE8	; 232
    10a4:	d4 f3       	brlt	.-12     	; 0x109a <__mulsf3_pse+0x84>
    10a6:	86 95       	lsr	r24
    10a8:	77 95       	ror	r23
    10aa:	67 95       	ror	r22
    10ac:	b7 95       	ror	r27
    10ae:	f7 95       	ror	r31
    10b0:	e7 95       	ror	r30
    10b2:	9f 5f       	subi	r25, 0xFF	; 255
    10b4:	c1 f7       	brne	.-16     	; 0x10a6 <__mulsf3_pse+0x90>
    10b6:	fe 2b       	or	r31, r30
    10b8:	88 0f       	add	r24, r24
    10ba:	91 1d       	adc	r25, r1
    10bc:	96 95       	lsr	r25
    10be:	87 95       	ror	r24
    10c0:	97 f9       	bld	r25, 7
    10c2:	08 95       	ret

000010c4 <__divmodhi4>:
    10c4:	97 fb       	bst	r25, 7
    10c6:	07 2e       	mov	r0, r23
    10c8:	16 f4       	brtc	.+4      	; 0x10ce <__divmodhi4+0xa>
    10ca:	00 94       	com	r0
    10cc:	07 d0       	rcall	.+14     	; 0x10dc <__divmodhi4_neg1>
    10ce:	77 fd       	sbrc	r23, 7
    10d0:	09 d0       	rcall	.+18     	; 0x10e4 <__divmodhi4_neg2>
    10d2:	0e 94 76 08 	call	0x10ec	; 0x10ec <__udivmodhi4>
    10d6:	07 fc       	sbrc	r0, 7
    10d8:	05 d0       	rcall	.+10     	; 0x10e4 <__divmodhi4_neg2>
    10da:	3e f4       	brtc	.+14     	; 0x10ea <__divmodhi4_exit>

000010dc <__divmodhi4_neg1>:
    10dc:	90 95       	com	r25
    10de:	81 95       	neg	r24
    10e0:	9f 4f       	sbci	r25, 0xFF	; 255
    10e2:	08 95       	ret

000010e4 <__divmodhi4_neg2>:
    10e4:	70 95       	com	r23
    10e6:	61 95       	neg	r22
    10e8:	7f 4f       	sbci	r23, 0xFF	; 255

000010ea <__divmodhi4_exit>:
    10ea:	08 95       	ret

000010ec <__udivmodhi4>:
    10ec:	aa 1b       	sub	r26, r26
    10ee:	bb 1b       	sub	r27, r27
    10f0:	51 e1       	ldi	r21, 0x11	; 17
    10f2:	07 c0       	rjmp	.+14     	; 0x1102 <__udivmodhi4_ep>

000010f4 <__udivmodhi4_loop>:
    10f4:	aa 1f       	adc	r26, r26
    10f6:	bb 1f       	adc	r27, r27
    10f8:	a6 17       	cp	r26, r22
    10fa:	b7 07       	cpc	r27, r23
    10fc:	10 f0       	brcs	.+4      	; 0x1102 <__udivmodhi4_ep>
    10fe:	a6 1b       	sub	r26, r22
    1100:	b7 0b       	sbc	r27, r23

00001102 <__udivmodhi4_ep>:
    1102:	88 1f       	adc	r24, r24
    1104:	99 1f       	adc	r25, r25
    1106:	5a 95       	dec	r21
    1108:	a9 f7       	brne	.-22     	; 0x10f4 <__udivmodhi4_loop>
    110a:	80 95       	com	r24
    110c:	90 95       	com	r25
    110e:	bc 01       	movw	r22, r24
    1110:	cd 01       	movw	r24, r26
    1112:	08 95       	ret

00001114 <_exit>:
    1114:	f8 94       	cli

00001116 <__stop_program>:
    1116:	ff cf       	rjmp	.-2      	; 0x1116 <__stop_program>
